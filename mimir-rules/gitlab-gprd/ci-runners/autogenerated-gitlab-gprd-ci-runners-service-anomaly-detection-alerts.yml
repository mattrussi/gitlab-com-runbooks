# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/service-anomaly-detection-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: ci-runners - service_ops_anomaly_detection
  rules:
  - alert: service_ops_out_of_bounds_upper_5m
    for: 5m
    annotations:
      title: 'Anomaly detection: The `{{ $labels.type }}` service (`{{ $labels.stage
        }}` stage) is receiving more requests than normal'
      description: |
        The `{{ $labels.type }}` service (`{{ $labels.stage }}` stage) is receiving more requests than normal. This is often caused by user generated traffic, sometimes abuse. It can also be cause by application changes that lead to higher operations rates or from retries in the event of errors. Check the abuse reporting watches in Elastic, ELK for possible abuse, error rates (possibly on upstream services) for root cause.
      grafana_dashboard_id: general-service/service-platform-metrics
      grafana_dashboard_link: https://dashboards.gitlab.net/d/general-service/service-platform-metrics?from=now-12h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-type={{ $labels.type }}&var-stage={{ $labels.stage
        }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "12"
      grafana_panel_id: "2633741645"
      grafana_variables: environment,type,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/monitoring/definition-service-ops-rate.md
      promql_template_1: gitlab_service_ops:rate{environment="$environment", type="$type",
        stage="$stage"}
      promql_template_2: gitlab_component_ops:rate{environment="$environment", type="$type",
        stage="$stage"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_trigger: service_ops_anomaly
      alert_type: cause
      rules_domain: general
      severity: s4
    expr: |
      (
          (
            (gitlab_service_ops:rate_5m{env="gprd",monitor="global",type="ci-runners"} -  gitlab_service_ops:rate:prediction{env="gprd",monitor="global",type="ci-runners"}) /
          gitlab_service_ops:rate:stddev_over_time_1w{env="gprd",monitor="global",type="ci-runners"}
        )
        >
        3
      )
      unless on(tier, type)
      gitlab_service:mapping:disable_ops_rate_prediction{monitor="global"}
  - alert: service_ops_out_of_bounds_lower_5m
    for: 5m
    annotations:
      title: 'Anomaly detection: The `{{ $labels.type }}` service (`{{ $labels.stage
        }}` stage) is receiving fewer requests than normal'
      description: |
        The `{{ $labels.type }}` service (`{{ $labels.stage }}` stage) is receiving fewer requests than normal. This is often caused by a failure in an upstream service - for example, an upstream load balancer rejected all incoming traffic. In many cases, this is as serious or more serious than a traffic spike. Check upstream services for errors that may be leading to traffic flow issues in downstream services.
      grafana_dashboard_id: general-service/service-platform-metrics
      grafana_dashboard_link: https://dashboards.gitlab.net/d/general-service/service-platform-metrics?from=now-12h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-type={{ $labels.type }}&var-stage={{ $labels.stage
        }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "12"
      grafana_panel_id: "2633741645"
      grafana_variables: environment,type,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/monitoring/definition-service-ops-rate.md
      promql_template_1: gitlab_service_ops:rate{environment="$environment", type="$type",
        stage="$stage"}
      promql_template_2: gitlab_component_ops:rate{environment="$environment", type="$type",
        stage="$stage"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      rules_domain: general
      severity: s4
    expr: |
      (
          (
            (gitlab_service_ops:rate_5m{env="gprd",monitor="global",type="ci-runners"} -  gitlab_service_ops:rate:prediction{env="gprd",monitor="global",type="ci-runners"}) /
          gitlab_service_ops:rate:stddev_over_time_1w{env="gprd",monitor="global",type="ci-runners"}
        )
        <
        -3
      )
      unless on(tier, type)
      gitlab_service:mapping:disable_ops_rate_prediction{monitor="global"}
