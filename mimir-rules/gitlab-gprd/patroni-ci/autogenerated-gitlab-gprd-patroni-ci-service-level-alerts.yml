# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/service-component-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'Service Component Alerts: patroni-ci'
  interval: 1m
  rules:
  - alert: PatroniCiServiceClientDatabaseTransactionApdexSLOViolation
    for: 2m
    annotations:
      title: The client_database_transaction SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        This tracks the largest database transaction duration from the client's perspective.

        A success means that every database transaction within a Sidekiq job is below the threshold duration. A failure would mean at least one database transaction within the Sidekiq job has exceeded the threshold duration.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1142257756"
      grafana_variables: environment,stage
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s4
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "no"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="client_database_transaction",env="gprd",monitor="global",type="patroni-ci"}
          < (1 - 14.4 * 0.005000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_5m{component="client_database_transaction",env="gprd",monitor="global",type="patroni-ci"}
          < (1 - 14.4 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="client_database_transaction",env="gprd",monitor="global",type="patroni-ci"}) >= 1
      )
  - alert: PatroniCiServiceClientDatabaseTransactionApdexSLOViolation
    for: 2m
    annotations:
      title: The client_database_transaction SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        This tracks the largest database transaction duration from the client's perspective.

        A success means that every database transaction within a Sidekiq job is below the threshold duration. A failure would mean at least one database transaction within the Sidekiq job has exceeded the threshold duration.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1142257756"
      grafana_variables: environment,stage
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s4
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "no"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="client_database_transaction",env="gprd",monitor="global",type="patroni-ci"}
          < (1 - 6 * 0.005000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_30m{component="client_database_transaction",env="gprd",monitor="global",type="patroni-ci"}
          < (1 - 6 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="client_database_transaction",env="gprd",monitor="global",type="patroni-ci"}) >= 0.16667
      )
  - alert: PatroniCiServiceClientDatabaseTransactionTrafficCessation
    for: 5m
    annotations:
      title: The client_database_transaction SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        This tracks the largest database transaction duration from the client's perspective.

        A success means that every database transaction within a Sidekiq job is below the threshold duration. A failure would mean at least one database transaction within the Sidekiq job has exceeded the threshold duration.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "47523188"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_db_transaction_apdex_total{db_config_name="ci",environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s4
      sli_type: ops
      slo_alert: "no"
      user_impacting: "no"
    expr: |
      gitlab_component_ops:rate_30m{component="client_database_transaction",env="gprd",monitor="global",stage="main",type="patroni-ci"} < 0.16666666666666666
      and
      gitlab_component_ops:rate_30m{component="client_database_transaction",env="gprd",monitor="global",stage="main",type="patroni-ci"} offset 1h >= 0.16666666666666666
  - alert: PatroniCiServiceClientDatabaseTransactionTrafficAbsent
    for: 30m
    annotations:
      title: The client_database_transaction SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        This tracks the largest database transaction duration from the client's perspective.

        A success means that every database transaction within a Sidekiq job is below the threshold duration. A failure would mean at least one database transaction within the Sidekiq job has exceeded the threshold duration.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "47523188"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_db_transaction_apdex_total{db_config_name="ci",environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s4
      sli_type: ops
      slo_alert: "no"
      user_impacting: "no"
    expr: |
      gitlab_component_ops:rate_5m{component="client_database_transaction",env="gprd",monitor="global",stage="main",type="patroni-ci"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="client_database_transaction",env="gprd",monitor="global",stage="main",type="patroni-ci"}
  - alert: PatroniCiServicePgbouncerErrorSLOViolation
    for: 2m
    annotations:
      title: The pgbouncer SLI of the patroni-ci service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        All transactions destined for the Postgres secondary instances are routed through the pgbouncer instances running on the patroni nodes themselves. This SLI models those transactions in aggregate.

        Error rate uses mtail metrics from pgbouncer logs.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3935075118"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(pgbouncer_pooler_errors_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m])
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="pgbouncer",env="gprd",monitor="global",type="patroni-ci"}
          > (14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="pgbouncer",env="gprd",monitor="global",type="patroni-ci"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="pgbouncer",env="gprd",monitor="global",type="patroni-ci"}) >= 1
      )
  - alert: PatroniCiServicePgbouncerErrorSLOViolation
    for: 2m
    annotations:
      title: The pgbouncer SLI of the patroni-ci service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        All transactions destined for the Postgres secondary instances are routed through the pgbouncer instances running on the patroni nodes themselves. This SLI models those transactions in aggregate.

        Error rate uses mtail metrics from pgbouncer logs.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3935075118"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(pgbouncer_pooler_errors_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m])
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="pgbouncer",env="gprd",monitor="global",type="patroni-ci"}
          > (6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="pgbouncer",env="gprd",monitor="global",type="patroni-ci"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="pgbouncer",env="gprd",monitor="global",type="patroni-ci"}) >= 0.16667
      )
  - alert: PatroniCiServicePgbouncerTrafficCessation
    for: 5m
    annotations:
      title: The pgbouncer SLI of the patroni-ci service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30m
      description: |
        All transactions destined for the Postgres secondary instances are routed through the pgbouncer instances running on the patroni nodes themselves. This SLI models those transactions in aggregate.

        Error rate uses mtail metrics from pgbouncer logs.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2579921767"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(pgbouncer_stats_sql_transactions_pooled_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(pgbouncer_stats_queries_pooled_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]), "_c", "1", "", "")
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="pgbouncer",env="gprd",monitor="global",stage="main",type="patroni-ci"} < 0.16666666666666666
      and
      gitlab_component_ops:rate_30m{component="pgbouncer",env="gprd",monitor="global",stage="main",type="patroni-ci"} offset 1h >= 0.16666666666666666
  - alert: PatroniCiServicePgbouncerTrafficAbsent
    for: 30m
    annotations:
      title: The pgbouncer SLI of the patroni-ci service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30m
      description: |
        All transactions destined for the Postgres secondary instances are routed through the pgbouncer instances running on the patroni nodes themselves. This SLI models those transactions in aggregate.

        Error rate uses mtail metrics from pgbouncer logs.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2579921767"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(pgbouncer_stats_sql_transactions_pooled_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(pgbouncer_stats_queries_pooled_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]), "_c", "1", "", "")
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="pgbouncer",env="gprd",monitor="global",stage="main",type="patroni-ci"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="pgbouncer",env="gprd",monitor="global",stage="main",type="patroni-ci"}
  - alert: PatroniCiServiceRailsPrimarySqlApdexSLOViolation
    for: 2m
    annotations:
      title: The rails_primary_sql SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        Represents all SQL transactions issued through ActiveRecord from the Rails monolith (web, api, websockets, but not sidekiq) to the Postgres primary. Durations can be impacted by various conditions other than Patroni, including client pool saturation, pgbouncer saturation, Ruby thread contention and network conditions.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2409561530"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_sql_primary_duration_seconds_bucket{db_config_name="ci",environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type!="sidekiq",type!="ops-gitlab-net"}[5m])
          )
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="rails_primary_sql",env="gprd",monitor="global",type="patroni-ci"}
          < (1 - 14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_5m{component="rails_primary_sql",env="gprd",monitor="global",type="patroni-ci"}
          < (1 - 14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="rails_primary_sql",env="gprd",monitor="global",type="patroni-ci"}) >= 1
      )
  - alert: PatroniCiServiceRailsPrimarySqlApdexSLOViolation
    for: 2m
    annotations:
      title: The rails_primary_sql SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        Represents all SQL transactions issued through ActiveRecord from the Rails monolith (web, api, websockets, but not sidekiq) to the Postgres primary. Durations can be impacted by various conditions other than Patroni, including client pool saturation, pgbouncer saturation, Ruby thread contention and network conditions.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2409561530"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_sql_primary_duration_seconds_bucket{db_config_name="ci",environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type!="sidekiq",type!="ops-gitlab-net"}[5m])
          )
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="rails_primary_sql",env="gprd",monitor="global",type="patroni-ci"}
          < (1 - 6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_30m{component="rails_primary_sql",env="gprd",monitor="global",type="patroni-ci"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="rails_primary_sql",env="gprd",monitor="global",type="patroni-ci"}) >= 0.16667
      )
  - alert: PatroniCiServiceRailsPrimarySqlTrafficCessation
    for: 5m
    annotations:
      title: The rails_primary_sql SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        Represents all SQL transactions issued through ActiveRecord from the Rails monolith (web, api, websockets, but not sidekiq) to the Postgres primary. Durations can be impacted by various conditions other than Patroni, including client pool saturation, pgbouncer saturation, Ruby thread contention and network conditions.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "12068001"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sql_primary_duration_seconds_bucket{db_config_name="ci",environment="{{ $labels.environment }}",le="+Inf",stage="{{ $labels.stage }}",type!="sidekiq",type!="ops-gitlab-net"}[5m])
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="rails_primary_sql",env="gprd",monitor="global",stage="main",type="patroni-ci"} < 0.16666666666666666
      and
      gitlab_component_ops:rate_30m{component="rails_primary_sql",env="gprd",monitor="global",stage="main",type="patroni-ci"} offset 1h >= 0.16666666666666666
  - alert: PatroniCiServiceRailsPrimarySqlTrafficAbsent
    for: 30m
    annotations:
      title: The rails_primary_sql SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        Represents all SQL transactions issued through ActiveRecord from the Rails monolith (web, api, websockets, but not sidekiq) to the Postgres primary. Durations can be impacted by various conditions other than Patroni, including client pool saturation, pgbouncer saturation, Ruby thread contention and network conditions.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "12068001"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sql_primary_duration_seconds_bucket{db_config_name="ci",environment="{{ $labels.environment }}",le="+Inf",stage="{{ $labels.stage }}",type!="sidekiq",type!="ops-gitlab-net"}[5m])
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="rails_primary_sql",env="gprd",monitor="global",stage="main",type="patroni-ci"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="rails_primary_sql",env="gprd",monitor="global",stage="main",type="patroni-ci"}
  - alert: PatroniCiServiceRailsReplicaSqlApdexSLOViolation
    for: 2m
    annotations:
      title: The rails_replica_sql SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        Represents all SQL transactions issued through ActiveRecord from the Rails monolith (web, api, websockets, but not sidekiq) to Postgres replicas. Durations can be impacted by various conditions other than Patroni, including client pool saturation, pgbouncer saturation, Ruby thread contention and network conditions.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4242138551"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_sql_replica_duration_seconds_bucket{db_config_name="ci_replica",environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type!="sidekiq"}[5m])
          )
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="rails_replica_sql",env="gprd",monitor="global",type="patroni-ci"}
          < (1 - 14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_5m{component="rails_replica_sql",env="gprd",monitor="global",type="patroni-ci"}
          < (1 - 14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="rails_replica_sql",env="gprd",monitor="global",type="patroni-ci"}) >= 1
      )
  - alert: PatroniCiServiceRailsReplicaSqlApdexSLOViolation
    for: 2m
    annotations:
      title: The rails_replica_sql SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        Represents all SQL transactions issued through ActiveRecord from the Rails monolith (web, api, websockets, but not sidekiq) to Postgres replicas. Durations can be impacted by various conditions other than Patroni, including client pool saturation, pgbouncer saturation, Ruby thread contention and network conditions.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4242138551"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_sql_replica_duration_seconds_bucket{db_config_name="ci_replica",environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type!="sidekiq"}[5m])
          )
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="rails_replica_sql",env="gprd",monitor="global",type="patroni-ci"}
          < (1 - 6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_30m{component="rails_replica_sql",env="gprd",monitor="global",type="patroni-ci"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="rails_replica_sql",env="gprd",monitor="global",type="patroni-ci"}) >= 0.16667
      )
  - alert: PatroniCiServiceRailsReplicaSqlTrafficCessation
    for: 5m
    annotations:
      title: The rails_replica_sql SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        Represents all SQL transactions issued through ActiveRecord from the Rails monolith (web, api, websockets, but not sidekiq) to Postgres replicas. Durations can be impacted by various conditions other than Patroni, including client pool saturation, pgbouncer saturation, Ruby thread contention and network conditions.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "762276418"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sql_replica_duration_seconds_bucket{db_config_name="ci_replica",environment="{{ $labels.environment }}",le="+Inf",stage="{{ $labels.stage }}",type!="sidekiq",type!="ops-gitlab-net"}[5m])
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="rails_replica_sql",env="gprd",monitor="global",stage="main",type="patroni-ci"} < 0.16666666666666666
      and
      gitlab_component_ops:rate_30m{component="rails_replica_sql",env="gprd",monitor="global",stage="main",type="patroni-ci"} offset 1h >= 0.16666666666666666
  - alert: PatroniCiServiceRailsReplicaSqlTrafficAbsent
    for: 30m
    annotations:
      title: The rails_replica_sql SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        Represents all SQL transactions issued through ActiveRecord from the Rails monolith (web, api, websockets, but not sidekiq) to Postgres replicas. Durations can be impacted by various conditions other than Patroni, including client pool saturation, pgbouncer saturation, Ruby thread contention and network conditions.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "762276418"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sql_replica_duration_seconds_bucket{db_config_name="ci_replica",environment="{{ $labels.environment }}",le="+Inf",stage="{{ $labels.stage }}",type!="sidekiq",type!="ops-gitlab-net"}[5m])
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="rails_replica_sql",env="gprd",monitor="global",stage="main",type="patroni-ci"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="rails_replica_sql",env="gprd",monitor="global",stage="main",type="patroni-ci"}
  - alert: PatroniCiServiceTransactionsPrimaryErrorSLOViolation
    for: 2m
    annotations:
      title: The transactions_primary SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        Represents all SQL transactions issued to the primary Postgres instance. Errors represent transaction rollbacks.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2278903563"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]) and on (fqdn) (pg_replication_is_replica == 0)
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="transactions_primary",env="gprd",monitor="global",type="patroni-ci"}
          > (14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="transactions_primary",env="gprd",monitor="global",type="patroni-ci"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="transactions_primary",env="gprd",monitor="global",type="patroni-ci"}) >= 1
      )
  - alert: PatroniCiServiceTransactionsPrimaryErrorSLOViolation
    for: 2m
    annotations:
      title: The transactions_primary SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        Represents all SQL transactions issued to the primary Postgres instance. Errors represent transaction rollbacks.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2278903563"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]) and on (fqdn) (pg_replication_is_replica == 0)
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="transactions_primary",env="gprd",monitor="global",type="patroni-ci"}
          > (6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="transactions_primary",env="gprd",monitor="global",type="patroni-ci"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="transactions_primary",env="gprd",monitor="global",type="patroni-ci"}) >= 0.16667
      )
  - alert: PatroniCiServiceTransactionsPrimaryTrafficCessation
    for: 5m
    annotations:
      title: The transactions_primary SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        Represents all SQL transactions issued to the primary Postgres instance. Errors represent transaction rollbacks.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3407402624"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(pg_stat_database_xact_commit{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]) and on (fqdn) (pg_replication_is_replica == 0), "_c", "0", "", "")
          or
          label_replace(rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]) and on (fqdn) (pg_replication_is_replica == 0), "_c", "1", "", "")
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="transactions_primary",env="gprd",monitor="global",stage="main",type="patroni-ci"} < 0.16666666666666666
      and
      gitlab_component_ops:rate_30m{component="transactions_primary",env="gprd",monitor="global",stage="main",type="patroni-ci"} offset 1h >= 0.16666666666666666
  - alert: PatroniCiServiceTransactionsPrimaryTrafficAbsent
    for: 30m
    annotations:
      title: The transactions_primary SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        Represents all SQL transactions issued to the primary Postgres instance. Errors represent transaction rollbacks.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3407402624"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(pg_stat_database_xact_commit{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]) and on (fqdn) (pg_replication_is_replica == 0), "_c", "0", "", "")
          or
          label_replace(rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]) and on (fqdn) (pg_replication_is_replica == 0), "_c", "1", "", "")
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="transactions_primary",env="gprd",monitor="global",stage="main",type="patroni-ci"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="transactions_primary",env="gprd",monitor="global",stage="main",type="patroni-ci"}
  - alert: PatroniCiServiceTransactionsReplicaErrorSLOViolation
    for: 2m
    annotations:
      title: The transactions_replica SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        Represents all SQL transactions issued to replica Postgres instances, in aggregate. Errors represent transaction rollbacks.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "438786388"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]) and on (fqdn) (pg_replication_is_replica == 1)
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="transactions_replica",env="gprd",monitor="global",type="patroni-ci"}
          > (14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="transactions_replica",env="gprd",monitor="global",type="patroni-ci"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="transactions_replica",env="gprd",monitor="global",type="patroni-ci"}) >= 1
      )
  - alert: PatroniCiServiceTransactionsReplicaErrorSLOViolation
    for: 2m
    annotations:
      title: The transactions_replica SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        Represents all SQL transactions issued to replica Postgres instances, in aggregate. Errors represent transaction rollbacks.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "438786388"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]) and on (fqdn) (pg_replication_is_replica == 1)
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="transactions_replica",env="gprd",monitor="global",type="patroni-ci"}
          > (6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="transactions_replica",env="gprd",monitor="global",type="patroni-ci"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="transactions_replica",env="gprd",monitor="global",type="patroni-ci"}) >= 0.16667
      )
  - alert: PatroniCiServiceTransactionsReplicaTrafficCessation
    for: 5m
    annotations:
      title: The transactions_replica SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        Represents all SQL transactions issued to replica Postgres instances, in aggregate. Errors represent transaction rollbacks.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1864411224"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(pg_stat_database_xact_commit{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]) and on (fqdn) (pg_replication_is_replica == 1), "_c", "0", "", "")
          or
          label_replace(rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]) and on (fqdn) (pg_replication_is_replica == 1), "_c", "1", "", "")
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="transactions_replica",env="gprd",monitor="global",stage="main",type="patroni-ci"} < 0.16666666666666666
      and
      gitlab_component_ops:rate_30m{component="transactions_replica",env="gprd",monitor="global",stage="main",type="patroni-ci"} offset 1h >= 0.16666666666666666
  - alert: PatroniCiServiceTransactionsReplicaTrafficAbsent
    for: 30m
    annotations:
      title: The transactions_replica SLI of the patroni-ci service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        Represents all SQL transactions issued to replica Postgres instances, in aggregate. Errors represent transaction rollbacks.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: patroni-ci-main/patroni-ci-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/patroni-ci-main/patroni-ci-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gprd
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1864411224"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(pg_stat_database_xact_commit{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]) and on (fqdn) (pg_replication_is_replica == 1), "_c", "0", "", "")
          or
          label_replace(rate(pg_stat_database_xact_rollback{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",tier="db",type="patroni-ci"}[5m]) and on (fqdn) (pg_replication_is_replica == 1), "_c", "1", "", "")
        )
      runbook: docs/patroni-ci/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="transactions_replica",env="gprd",monitor="global",stage="main",type="patroni-ci"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="transactions_replica",env="gprd",monitor="global",stage="main",type="patroni-ci"}
