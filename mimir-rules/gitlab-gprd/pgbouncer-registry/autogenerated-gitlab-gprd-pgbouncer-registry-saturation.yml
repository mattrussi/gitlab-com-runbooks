# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/saturation.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: Saturation Rules (autogenerated)
  interval: 1m
  rules:
  - record: gitlab_component_saturation:ratio
    labels:
      component: cpu
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            1 - avg by (env,environment,shard,stage,tier,type) (
              rate(node_cpu_seconds_total{mode="idle", env="gprd",type="pgbouncer-registry"}[5m])
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: disk_inodes
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            1 - (
              node_filesystem_files_free{fstype=~"(ext.|xfs)", env="gprd",type="pgbouncer-registry"}
              /
              node_filesystem_files{fstype=~"(ext.|xfs)", env="gprd",type="pgbouncer-registry"}
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: disk_maximum_capacity
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            max by (device,env,environment,fqdn,shard,stage,tier,type) (
              node_filesystem_size_bytes{fstype=~"ext.|xfs", env="gprd",type="pgbouncer-registry"} - node_filesystem_avail_bytes{fstype=~"ext.|xfs", env="gprd",type="pgbouncer-registry"}
            ) / (64*2^40)
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: disk_space
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            (
              1 - node_filesystem_avail_bytes{fstype=~"ext.|xfs", env="gprd",type="pgbouncer-registry"} / node_filesystem_size_bytes{fstype=~"ext.|xfs", env="gprd",type="pgbouncer-registry"}
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: memory
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            instance:node_memory_utilization:ratio{env="gprd",type="pgbouncer-registry"} or instance:node_memory_utilisation:ratio{env="gprd",type="pgbouncer-registry"}
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: nf_conntrack_entries
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            max_over_time(node_nf_conntrack_entries{env="gprd",type="pgbouncer-registry"}[1m])
            /
            node_nf_conntrack_entries_limit{env="gprd",type="pgbouncer-registry"}
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: node_schedstat_waiting
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            avg without (cpu) (rate(node_schedstat_waiting_seconds_total{env="gprd",type="pgbouncer-registry"}[1h]))
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: open_fds
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            (
              process_open_fds{env="gprd",type="pgbouncer-registry"}
              /
              process_max_fds{env="gprd",type="pgbouncer-registry"}
            )
            or
            (
              ruby_file_descriptors{env="gprd",type="pgbouncer-registry"}
              /
              ruby_process_max_fds{env="gprd",type="pgbouncer-registry"}
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: pgbouncer_client_conn_primary
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            max_over_time(pgbouncer_used_clients{env="gprd",type="pgbouncer-registry"}[5m])
            /
            15000
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: pgbouncer_sync_primary_pool
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            (
              avg_over_time(pgbouncer_pools_server_active_connections{user=~"gitlab|gitlab-registry", database=~"gitlabhq_registry|gitlabhq_production", env="gprd",type="pgbouncer-registry"}[5m]) +
              avg_over_time(pgbouncer_pools_server_testing_connections{user=~"gitlab|gitlab-registry", database=~"gitlabhq_registry|gitlabhq_production", env="gprd",type="pgbouncer-registry"}[5m]) +
              avg_over_time(pgbouncer_pools_server_used_connections{user=~"gitlab|gitlab-registry", database=~"gitlabhq_registry|gitlabhq_production", env="gprd",type="pgbouncer-registry"}[5m]) +
              avg_over_time(pgbouncer_pools_server_login_connections{user=~"gitlab|gitlab-registry", database=~"gitlabhq_registry|gitlabhq_production", env="gprd",type="pgbouncer-registry"}[5m])
            )
            / on(env,environment,fqdn,instance,shard,stage,tier,type) group_left()
            sum by (env,environment,fqdn,instance,shard,stage,tier,type) (
              avg_over_time(pgbouncer_databases_pool_size{name=~"gitlabhq_registry|gitlabhq_production", env="gprd",type="pgbouncer-registry"}[5m])
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: single_node_cpu
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            avg without(cpu, mode) (1 - rate(node_cpu_seconds_total{mode="idle", env="gprd",type="pgbouncer-registry"}[5m]))
            ,
            1)
        ,
        0)
      )
