# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/service-component-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'Service Component Alerts: ci-runners'
  interval: 1m
  rules:
  - alert: CiRunnersServiceCiRunnerJobsApdexSLOViolationSingleShard
    for: 10m
    annotations:
      title: The ci_runner_jobs SLI of the ci-runners service on shard `{{ $labels.shard
        }}` has an apdex violating SLO
      description: |
        This SLI monitors the SaaS runner jobs handling. Each job is an operation.

        Apdex uses queueing latencies. If shard is for instance runners on GitLab.com, it counts jobs which are considered to be fair-usage (less than 5 concurrently running jobs from a project on instance runners).

        Jobs marked as failing with runner system failures are considered to be in error.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single shard may represent a user-impacting service degradation.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}&var-shard={{ $labels.shard
        }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2925052761"
      grafana_variables: environment,stage,shard
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component_shard
      alert_class: slo_violation
      alert_type: symptom
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_shard_apdex:ratio_1h{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          < (1 - 14.4 * 0.030000)
        )
        and on (env,environment,tier,type,stage,shard,component)
        (
          gitlab_component_shard_apdex:ratio_5m{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          < (1 - 14.4 * 0.030000)
        )
      )
      and on(env,environment,tier,type,stage,shard,component)
      (
        sum by(env,environment,tier,type,stage,shard,component) (gitlab_component_shard_ops:rate_1h{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"}) >= 1
      )
  - alert: CiRunnersServiceCiRunnerJobsApdexSLOViolationSingleShard
    for: 10m
    annotations:
      title: The ci_runner_jobs SLI of the ci-runners service on shard `{{ $labels.shard
        }}` has an apdex violating SLO
      description: |
        This SLI monitors the SaaS runner jobs handling. Each job is an operation.

        Apdex uses queueing latencies. If shard is for instance runners on GitLab.com, it counts jobs which are considered to be fair-usage (less than 5 concurrently running jobs from a project on instance runners).

        Jobs marked as failing with runner system failures are considered to be in error.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single shard may represent a user-impacting service degradation.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}&var-shard={{ $labels.shard
        }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2925052761"
      grafana_variables: environment,stage,shard
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component_shard
      alert_class: slo_violation
      alert_type: symptom
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_shard_apdex:ratio_6h{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          < (1 - 6 * 0.030000)
        )
        and on (env,environment,tier,type,stage,shard,component)
        (
          gitlab_component_shard_apdex:ratio_30m{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          < (1 - 6 * 0.030000)
        )
      )
      and on(env,environment,tier,type,stage,shard,component)
      (
        sum by(env,environment,tier,type,stage,shard,component) (gitlab_component_shard_ops:rate_6h{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"}) >= 0.16667
      )
  - alert: CiRunnersServiceCiRunnerJobsErrorSLOViolationSingleShard
    for: 10m
    annotations:
      title: The ci_runner_jobs SLI of the ci-runners service on shard `{{ $labels.shard
        }}` has an error rate violating SLO
      description: |
        This SLI monitors the SaaS runner jobs handling. Each job is an operation.

        Apdex uses queueing latencies. If shard is for instance runners on GitLab.com, it counts jobs which are considered to be fair-usage (less than 5 concurrently running jobs from a project on instance runners).

        Jobs marked as failing with runner system failures are considered to be in error.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single shard may represent a user-impacting service degradation.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}&var-shard={{ $labels.shard
        }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1816907671"
      grafana_variables: environment,stage,shard
      promql_template_1: |
        sum by (env,environment,tier,stage,shard) (
          rate(gitlab_runner_failed_jobs_total{environment="{{ $labels.environment }}",failure_reason="runner_system_failure",job=~"runners-manager|scrapeConfig/monitoring/prometheus-agent-runner",shard=~"private|saas-.*|shared-gitlab-org|windows-shared",stage="{{ $labels.stage }}",type="ci-runners"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component_shard
      alert_class: slo_violation
      alert_type: symptom
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_shard_errors:ratio_1h{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          > (14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,shard,component)
        (
          gitlab_component_shard_errors:ratio_5m{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,shard,component)
      (
        sum by(env,environment,tier,type,stage,shard,component) (gitlab_component_shard_ops:rate_1h{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"}) >= 1
      )
  - alert: CiRunnersServiceCiRunnerJobsErrorSLOViolationSingleShard
    for: 10m
    annotations:
      title: The ci_runner_jobs SLI of the ci-runners service on shard `{{ $labels.shard
        }}` has an error rate violating SLO
      description: |
        This SLI monitors the SaaS runner jobs handling. Each job is an operation.

        Apdex uses queueing latencies. If shard is for instance runners on GitLab.com, it counts jobs which are considered to be fair-usage (less than 5 concurrently running jobs from a project on instance runners).

        Jobs marked as failing with runner system failures are considered to be in error.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single shard may represent a user-impacting service degradation.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}&var-shard={{ $labels.shard
        }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1816907671"
      grafana_variables: environment,stage,shard
      promql_template_1: |
        sum by (env,environment,tier,stage,shard) (
          rate(gitlab_runner_failed_jobs_total{environment="{{ $labels.environment }}",failure_reason="runner_system_failure",job=~"runners-manager|scrapeConfig/monitoring/prometheus-agent-runner",shard=~"private|saas-.*|shared-gitlab-org|windows-shared",stage="{{ $labels.stage }}",type="ci-runners"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component_shard
      alert_class: slo_violation
      alert_type: symptom
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_shard_errors:ratio_6h{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          > (6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,shard,component)
        (
          gitlab_component_shard_errors:ratio_30m{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,shard,component)
      (
        sum by(env,environment,tier,type,stage,shard,component) (gitlab_component_shard_ops:rate_6h{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"}) >= 0.16667
      )
  - alert: CiRunnersServiceCiRunnerJobsTrafficCessationSingleShard
    for: 5m
    annotations:
      title: The ci_runner_jobs SLI of the ci-runners service on shard `{{ $labels.shard
        }}` has not received any traffic in the past 30m
      description: |
        This SLI monitors the SaaS runner jobs handling. Each job is an operation.

        Apdex uses queueing latencies. If shard is for instance runners on GitLab.com, it counts jobs which are considered to be fair-usage (less than 5 concurrently running jobs from a project on instance runners).

        Jobs marked as failing with runner system failures are considered to be in error.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single shard may represent a user-impacting service degradation.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}&var-shard={{ $labels.shard
        }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1545241977"
      grafana_variables: environment,stage,shard
      promql_template_1: |
        sum by (env,environment,tier,stage,shard) (
          rate(gitlab_runner_jobs_total{environment="{{ $labels.environment }}",job=~"runners-manager|scrapeConfig/monitoring/prometheus-agent-runner",shard=~"private|saas-.*|shared-gitlab-org|windows-shared",stage="{{ $labels.stage }}",type="ci-runners"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component_shard
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_shard_ops:rate_30m{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"} < 0.16666666666666666
      and
      gitlab_component_shard_ops:rate_30m{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"} offset 1h >= 0.16666666666666666
  - alert: CiRunnersServiceCiRunnerJobsTrafficAbsentSingleShard
    for: 30m
    annotations:
      title: The ci_runner_jobs SLI of the ci-runners service on shard `{{ $labels.shard
        }}` has not reported any traffic in the past 30m
      description: |
        This SLI monitors the SaaS runner jobs handling. Each job is an operation.

        Apdex uses queueing latencies. If shard is for instance runners on GitLab.com, it counts jobs which are considered to be fair-usage (less than 5 concurrently running jobs from a project on instance runners).

        Jobs marked as failing with runner system failures are considered to be in error.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single shard may represent a user-impacting service degradation.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}&var-shard={{ $labels.shard
        }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1545241977"
      grafana_variables: environment,stage,shard
      promql_template_1: |
        sum by (env,environment,tier,stage,shard) (
          rate(gitlab_runner_jobs_total{environment="{{ $labels.environment }}",job=~"runners-manager|scrapeConfig/monitoring/prometheus-agent-runner",shard=~"private|saas-.*|shared-gitlab-org|windows-shared",stage="{{ $labels.stage }}",type="ci-runners"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component_shard
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_shard_ops:rate_5m{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"} offset 1h
      unless
      gitlab_component_shard_ops:rate_5m{component="ci_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
  - alert: CiRunnersServiceLoadbalancerErrorSLOViolation
    for: 2m
    annotations:
      title: The loadbalancer SLI of the ci-runners service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="loadbalancer",env="gstg",monitor="global",type="ci-runners"}
          > (14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="loadbalancer",env="gstg",monitor="global",type="ci-runners"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="loadbalancer",env="gstg",monitor="global",type="ci-runners"}) >= 1
      )
  - alert: CiRunnersServiceLoadbalancerErrorSLOViolation
    for: 2m
    annotations:
      title: The loadbalancer SLI of the ci-runners service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="loadbalancer",env="gstg",monitor="global",type="ci-runners"}
          > (6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="loadbalancer",env="gstg",monitor="global",type="ci-runners"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="loadbalancer",env="gstg",monitor="global",type="ci-runners"}) >= 0.16667
      )
  - alert: CiRunnersServiceLoadbalancerTrafficCessation
    for: 5m
    annotations:
      title: The loadbalancer SLI of the ci-runners service (`{{ $labels.stage }}`
        stage) has not received any traffic in the past 30m
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="loadbalancer",env="gstg",monitor="global",stage="main",type="ci-runners"} < 0.16666666666666666
      and
      gitlab_component_ops:rate_30m{component="loadbalancer",env="gstg",monitor="global",stage="main",type="ci-runners"} offset 1h >= 0.16666666666666666
  - alert: CiRunnersServiceLoadbalancerTrafficAbsent
    for: 30m
    annotations:
      title: The loadbalancer SLI of the ci-runners service (`{{ $labels.stage }}`
        stage) has not reported any traffic in the past 30m
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="loadbalancer",env="gstg",monitor="global",stage="main",type="ci-runners"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="loadbalancer",env="gstg",monitor="global",stage="main",type="ci-runners"}
  - alert: CiRunnersServicePollingErrorSLOViolation
    for: 2m
    annotations:
      title: The polling SLI of the ci-runners service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        This SLI monitors job polling operations from runners, via Workhorse's `/api/v4/jobs/request` route.

        5xx responses are considered to be errors, and could indicate postgres timeouts (after 15s) on the main query used in assigning jobs to runners.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2980174133"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{code=~"5..",environment="{{ $labels.environment }}",route="^/api/v4/jobs/request\\z",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="polling",env="gstg",monitor="global",type="ci-runners"}
          > (14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="polling",env="gstg",monitor="global",type="ci-runners"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="polling",env="gstg",monitor="global",type="ci-runners"}) >= 1
      )
  - alert: CiRunnersServicePollingErrorSLOViolation
    for: 2m
    annotations:
      title: The polling SLI of the ci-runners service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        This SLI monitors job polling operations from runners, via Workhorse's `/api/v4/jobs/request` route.

        5xx responses are considered to be errors, and could indicate postgres timeouts (after 15s) on the main query used in assigning jobs to runners.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2980174133"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{code=~"5..",environment="{{ $labels.environment }}",route="^/api/v4/jobs/request\\z",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="polling",env="gstg",monitor="global",type="ci-runners"}
          > (6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="polling",env="gstg",monitor="global",type="ci-runners"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="polling",env="gstg",monitor="global",type="ci-runners"}) >= 0.16667
      )
  - alert: CiRunnersServicePollingTrafficCessation
    for: 5m
    annotations:
      title: The polling SLI of the ci-runners service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30m
      description: |
        This SLI monitors job polling operations from runners, via Workhorse's `/api/v4/jobs/request` route.

        5xx responses are considered to be errors, and could indicate postgres timeouts (after 15s) on the main query used in assigning jobs to runners.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2481485218"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{environment="{{ $labels.environment }}",route="^/api/v4/jobs/request\\z",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="polling",env="gstg",monitor="global",stage="main",type="ci-runners"} < 0.16666666666666666
      and
      gitlab_component_ops:rate_30m{component="polling",env="gstg",monitor="global",stage="main",type="ci-runners"} offset 1h >= 0.16666666666666666
  - alert: CiRunnersServicePollingTrafficAbsent
    for: 30m
    annotations:
      title: The polling SLI of the ci-runners service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30m
      description: |
        This SLI monitors job polling operations from runners, via Workhorse's `/api/v4/jobs/request` route.

        5xx responses are considered to be errors, and could indicate postgres timeouts (after 15s) on the main query used in assigning jobs to runners.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2481485218"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{environment="{{ $labels.environment }}",route="^/api/v4/jobs/request\\z",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="polling",env="gstg",monitor="global",stage="main",type="ci-runners"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="polling",env="gstg",monitor="global",stage="main",type="ci-runners"}
  - alert: CiRunnersServiceQaRunnerJobsApdexSLOViolation
    for: 2m
    annotations:
      title: The qa_runner_jobs SLI of the ci-runners service (`{{ $labels.stage }}`
        stage) has an apdex violating SLO
      description: |
        This SLI monitors the SaaS runner jobs handling. Each job is an operation.

        Apdex uses queueing latencies. If shard is for instance runners on GitLab.com, it counts jobs which are considered to be fair-usage (less than 5 concurrently running jobs from a project on instance runners).

        Jobs marked as failing with runner system failures are considered to be in error. This SLI only focuses on the qa-runners shard, which is excluded from the main SLI because it is not user impacting.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2211350843"
      grafana_variables: environment,stage
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s4
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "no"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="qa_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          < (1 - 14.4 * 0.100000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_5m{component="qa_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          < (1 - 14.4 * 0.100000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="qa_runner_jobs",env="gstg",monitor="global",type="ci-runners"}) >= 1
      )
  - alert: CiRunnersServiceQaRunnerJobsApdexSLOViolation
    for: 2m
    annotations:
      title: The qa_runner_jobs SLI of the ci-runners service (`{{ $labels.stage }}`
        stage) has an apdex violating SLO
      description: |
        This SLI monitors the SaaS runner jobs handling. Each job is an operation.

        Apdex uses queueing latencies. If shard is for instance runners on GitLab.com, it counts jobs which are considered to be fair-usage (less than 5 concurrently running jobs from a project on instance runners).

        Jobs marked as failing with runner system failures are considered to be in error. This SLI only focuses on the qa-runners shard, which is excluded from the main SLI because it is not user impacting.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2211350843"
      grafana_variables: environment,stage
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s4
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "no"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="qa_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          < (1 - 6 * 0.100000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_30m{component="qa_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          < (1 - 6 * 0.100000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="qa_runner_jobs",env="gstg",monitor="global",type="ci-runners"}) >= 0.16667
      )
  - alert: CiRunnersServiceQaRunnerJobsErrorSLOViolation
    for: 2m
    annotations:
      title: The qa_runner_jobs SLI of the ci-runners service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        This SLI monitors the SaaS runner jobs handling. Each job is an operation.

        Apdex uses queueing latencies. If shard is for instance runners on GitLab.com, it counts jobs which are considered to be fair-usage (less than 5 concurrently running jobs from a project on instance runners).

        Jobs marked as failing with runner system failures are considered to be in error. This SLI only focuses on the qa-runners shard, which is excluded from the main SLI because it is not user impacting.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1957094237"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_runner_failed_jobs_total{environment="{{ $labels.environment }}",failure_reason="runner_system_failure",job=~"runners-manager|scrapeConfig/monitoring/prometheus-agent-runner",shard="qa-runners",stage="{{ $labels.stage }}",type="ci-runners"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s4
      sli_type: error
      slo_alert: "yes"
      user_impacting: "no"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="qa_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          > (14.4 * 0.050000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="qa_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          > (14.4 * 0.050000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="qa_runner_jobs",env="gstg",monitor="global",type="ci-runners"}) >= 1
      )
  - alert: CiRunnersServiceQaRunnerJobsErrorSLOViolation
    for: 2m
    annotations:
      title: The qa_runner_jobs SLI of the ci-runners service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        This SLI monitors the SaaS runner jobs handling. Each job is an operation.

        Apdex uses queueing latencies. If shard is for instance runners on GitLab.com, it counts jobs which are considered to be fair-usage (less than 5 concurrently running jobs from a project on instance runners).

        Jobs marked as failing with runner system failures are considered to be in error. This SLI only focuses on the qa-runners shard, which is excluded from the main SLI because it is not user impacting.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1957094237"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_runner_failed_jobs_total{environment="{{ $labels.environment }}",failure_reason="runner_system_failure",job=~"runners-manager|scrapeConfig/monitoring/prometheus-agent-runner",shard="qa-runners",stage="{{ $labels.stage }}",type="ci-runners"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s4
      sli_type: error
      slo_alert: "yes"
      user_impacting: "no"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="qa_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          > (6 * 0.050000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="qa_runner_jobs",env="gstg",monitor="global",type="ci-runners"}
          > (6 * 0.050000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="qa_runner_jobs",env="gstg",monitor="global",type="ci-runners"}) >= 0.16667
      )
  - alert: CiRunnersServiceQaRunnerJobsTrafficCessation
    for: 5m
    annotations:
      title: The qa_runner_jobs SLI of the ci-runners service (`{{ $labels.stage }}`
        stage) has not received any traffic in the past 30m
      description: |
        This SLI monitors the SaaS runner jobs handling. Each job is an operation.

        Apdex uses queueing latencies. If shard is for instance runners on GitLab.com, it counts jobs which are considered to be fair-usage (less than 5 concurrently running jobs from a project on instance runners).

        Jobs marked as failing with runner system failures are considered to be in error. This SLI only focuses on the qa-runners shard, which is excluded from the main SLI because it is not user impacting.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "496178147"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_runner_jobs_total{environment="{{ $labels.environment }}",job=~"runners-manager|scrapeConfig/monitoring/prometheus-agent-runner",shard="qa-runners",stage="{{ $labels.stage }}",type="ci-runners"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s4
      sli_type: ops
      slo_alert: "no"
      user_impacting: "no"
    expr: |
      gitlab_component_ops:rate_30m{component="qa_runner_jobs",env="gstg",monitor="global",stage="main",type="ci-runners"} < 0.16666666666666666
      and
      gitlab_component_ops:rate_30m{component="qa_runner_jobs",env="gstg",monitor="global",stage="main",type="ci-runners"} offset 1h >= 0.16666666666666666
  - alert: CiRunnersServiceQaRunnerJobsTrafficAbsent
    for: 30m
    annotations:
      title: The qa_runner_jobs SLI of the ci-runners service (`{{ $labels.stage }}`
        stage) has not reported any traffic in the past 30m
      description: |
        This SLI monitors the SaaS runner jobs handling. Each job is an operation.

        Apdex uses queueing latencies. If shard is for instance runners on GitLab.com, it counts jobs which are considered to be fair-usage (less than 5 concurrently running jobs from a project on instance runners).

        Jobs marked as failing with runner system failures are considered to be in error. This SLI only focuses on the qa-runners shard, which is excluded from the main SLI because it is not user impacting.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "496178147"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_runner_jobs_total{environment="{{ $labels.environment }}",job=~"runners-manager|scrapeConfig/monitoring/prometheus-agent-runner",shard="qa-runners",stage="{{ $labels.stage }}",type="ci-runners"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s4
      sli_type: ops
      slo_alert: "no"
      user_impacting: "no"
    expr: |
      gitlab_component_ops:rate_5m{component="qa_runner_jobs",env="gstg",monitor="global",stage="main",type="ci-runners"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="qa_runner_jobs",env="gstg",monitor="global",stage="main",type="ci-runners"}
  - alert: CiRunnersServiceQueuingQueriesDurationApdexSLOViolation
    for: 2m
    annotations:
      title: The queuing_queries_duration SLI of the ci-runners service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        This SLI monitors the queuing queries duration. Everything above 1 second is considered to be unexpected and needs investigation.

        These database queries are executed in the Rails application when a runner requests a new build to process in `POST /api/v4/jobs/request`.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4172966397"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_ci_queue_retrieval_duration_seconds_bucket{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
          )
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: continuous_integration
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      team: pipeline_execution
      user_impacting: "no"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="queuing_queries_duration",env="gstg",monitor="global",type="ci-runners"}
          < (1 - 14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_5m{component="queuing_queries_duration",env="gstg",monitor="global",type="ci-runners"}
          < (1 - 14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="queuing_queries_duration",env="gstg",monitor="global",type="ci-runners"}) >= 1
      )
  - alert: CiRunnersServiceQueuingQueriesDurationApdexSLOViolation
    for: 2m
    annotations:
      title: The queuing_queries_duration SLI of the ci-runners service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        This SLI monitors the queuing queries duration. Everything above 1 second is considered to be unexpected and needs investigation.

        These database queries are executed in the Rails application when a runner requests a new build to process in `POST /api/v4/jobs/request`.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4172966397"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_ci_queue_retrieval_duration_seconds_bucket{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
          )
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: continuous_integration
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      team: pipeline_execution
      user_impacting: "no"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="queuing_queries_duration",env="gstg",monitor="global",type="ci-runners"}
          < (1 - 6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_30m{component="queuing_queries_duration",env="gstg",monitor="global",type="ci-runners"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="queuing_queries_duration",env="gstg",monitor="global",type="ci-runners"}) >= 0.16667
      )
  - alert: CiRunnersServiceQueuingQueriesDurationTrafficCessation
    for: 5m
    annotations:
      title: The queuing_queries_duration SLI of the ci-runners service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        This SLI monitors the queuing queries duration. Everything above 1 second is considered to be unexpected and needs investigation.

        These database queries are executed in the Rails application when a runner requests a new build to process in `POST /api/v4/jobs/request`.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "462690019"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_ci_queue_retrieval_duration_seconds_count{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: continuous_integration
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      team: pipeline_execution
      user_impacting: "no"
    expr: |
      gitlab_component_ops:rate_30m{component="queuing_queries_duration",env="gstg",monitor="global",stage="main",type="ci-runners"} < 0.16666666666666666
      and
      gitlab_component_ops:rate_30m{component="queuing_queries_duration",env="gstg",monitor="global",stage="main",type="ci-runners"} offset 1h >= 0.16666666666666666
  - alert: CiRunnersServiceQueuingQueriesDurationTrafficAbsent
    for: 30m
    annotations:
      title: The queuing_queries_duration SLI of the ci-runners service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        This SLI monitors the queuing queries duration. Everything above 1 second is considered to be unexpected and needs investigation.

        These database queries are executed in the Rails application when a runner requests a new build to process in `POST /api/v4/jobs/request`.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "462690019"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_ci_queue_retrieval_duration_seconds_count{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: continuous_integration
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      team: pipeline_execution
      user_impacting: "no"
    expr: |
      gitlab_component_ops:rate_5m{component="queuing_queries_duration",env="gstg",monitor="global",stage="main",type="ci-runners"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="queuing_queries_duration",env="gstg",monitor="global",stage="main",type="ci-runners"}
  - alert: CiRunnersServiceSaasLinuxRunnerImagePullFailuresErrorSLOViolation
    for: 2m
    annotations:
      title: The saas_linux_runner_image_pull_failures SLI of the ci-runners service
        (`{{ $labels.stage }}` stage) has an error rate violating SLO
      description: |
        This SLI monitors the image pulling failures on SaaS runner.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3789838818"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_runner_failed_jobs_total{environment="{{ $labels.environment }}",failure_reason="image_pull_failure",job=~"runners-manager|scrapeConfig/monitoring/prometheus-agent-runner",shard=~"private|saas-linux-.*|shared-gitlab-org",stage="{{ $labels.stage }}",type="ci-runners"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="saas_linux_runner_image_pull_failures",env="gstg",monitor="global",type="ci-runners"}
          > (14.4 * 0.010000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="saas_linux_runner_image_pull_failures",env="gstg",monitor="global",type="ci-runners"}
          > (14.4 * 0.010000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="saas_linux_runner_image_pull_failures",env="gstg",monitor="global",type="ci-runners"}) >= 1
      )
  - alert: CiRunnersServiceSaasLinuxRunnerImagePullFailuresErrorSLOViolation
    for: 2m
    annotations:
      title: The saas_linux_runner_image_pull_failures SLI of the ci-runners service
        (`{{ $labels.stage }}` stage) has an error rate violating SLO
      description: |
        This SLI monitors the image pulling failures on SaaS runner.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3789838818"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_runner_failed_jobs_total{environment="{{ $labels.environment }}",failure_reason="image_pull_failure",job=~"runners-manager|scrapeConfig/monitoring/prometheus-agent-runner",shard=~"private|saas-linux-.*|shared-gitlab-org",stage="{{ $labels.stage }}",type="ci-runners"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="saas_linux_runner_image_pull_failures",env="gstg",monitor="global",type="ci-runners"}
          > (6 * 0.010000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="saas_linux_runner_image_pull_failures",env="gstg",monitor="global",type="ci-runners"}
          > (6 * 0.010000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="saas_linux_runner_image_pull_failures",env="gstg",monitor="global",type="ci-runners"}) >= 0.16667
      )
  - alert: CiRunnersServiceSaasLinuxRunnerImagePullFailuresTrafficCessation
    for: 5m
    annotations:
      title: The saas_linux_runner_image_pull_failures SLI of the ci-runners service
        (`{{ $labels.stage }}` stage) has not received any traffic in the past 30m
      description: |
        This SLI monitors the image pulling failures on SaaS runner.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "908209902"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_runner_jobs_total{environment="{{ $labels.environment }}",job=~"runners-manager|scrapeConfig/monitoring/prometheus-agent-runner",shard=~"private|saas-linux-.*|shared-gitlab-org",stage="{{ $labels.stage }}",type="ci-runners"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="saas_linux_runner_image_pull_failures",env="gstg",monitor="global",stage="main",type="ci-runners"} < 0.16666666666666666
      and
      gitlab_component_ops:rate_30m{component="saas_linux_runner_image_pull_failures",env="gstg",monitor="global",stage="main",type="ci-runners"} offset 1h >= 0.16666666666666666
  - alert: CiRunnersServiceSaasLinuxRunnerImagePullFailuresTrafficAbsent
    for: 30m
    annotations:
      title: The saas_linux_runner_image_pull_failures SLI of the ci-runners service
        (`{{ $labels.stage }}` stage) has not reported any traffic in the past 30m
      description: |
        This SLI monitors the image pulling failures on SaaS runner.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "908209902"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_runner_jobs_total{environment="{{ $labels.environment }}",job=~"runners-manager|scrapeConfig/monitoring/prometheus-agent-runner",shard=~"private|saas-linux-.*|shared-gitlab-org",stage="{{ $labels.stage }}",type="ci-runners"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: runner
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="saas_linux_runner_image_pull_failures",env="gstg",monitor="global",stage="main",type="ci-runners"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="saas_linux_runner_image_pull_failures",env="gstg",monitor="global",stage="main",type="ci-runners"}
  - alert: CiRunnersServiceTraceArchivingCiJobsErrorSLOViolation
    for: 2m
    annotations:
      title: The trace_archiving_ci_jobs SLI of the ci-runners service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        This SLI monitors CI job archiving, via Sidekiq jobs.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "294711071"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(job_trace_archive_failed_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: continuous_integration
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="trace_archiving_ci_jobs",env="gstg",monitor="global",type="ci-runners"}
          > (14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="trace_archiving_ci_jobs",env="gstg",monitor="global",type="ci-runners"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="trace_archiving_ci_jobs",env="gstg",monitor="global",type="ci-runners"}) >= 1
      )
  - alert: CiRunnersServiceTraceArchivingCiJobsErrorSLOViolation
    for: 2m
    annotations:
      title: The trace_archiving_ci_jobs SLI of the ci-runners service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        This SLI monitors CI job archiving, via Sidekiq jobs.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "294711071"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(job_trace_archive_failed_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: continuous_integration
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="trace_archiving_ci_jobs",env="gstg",monitor="global",type="ci-runners"}
          > (6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="trace_archiving_ci_jobs",env="gstg",monitor="global",type="ci-runners"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="trace_archiving_ci_jobs",env="gstg",monitor="global",type="ci-runners"}) >= 0.16667
      )
  - alert: CiRunnersServiceTraceArchivingCiJobsTrafficCessation
    for: 5m
    annotations:
      title: The trace_archiving_ci_jobs SLI of the ci-runners service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        This SLI monitors CI job archiving, via Sidekiq jobs.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2495268542"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_sidekiq_execution_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",worker="Ci::ArchiveTraceWorker"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: continuous_integration
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="trace_archiving_ci_jobs",env="gstg",monitor="global",stage="main",type="ci-runners"} < 0.16666666666666666
      and
      gitlab_component_ops:rate_30m{component="trace_archiving_ci_jobs",env="gstg",monitor="global",stage="main",type="ci-runners"} offset 1h >= 0.16666666666666666
  - alert: CiRunnersServiceTraceArchivingCiJobsTrafficAbsent
    for: 30m
    annotations:
      title: The trace_archiving_ci_jobs SLI of the ci-runners service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        This SLI monitors CI job archiving, via Sidekiq jobs.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: ci-runners-main/ci-runners-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ci-runners-main/ci-runners-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2495268542"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_sidekiq_execution_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",worker="Ci::ArchiveTraceWorker"}[5m])
        )
      runbook: docs/ci-runners/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: continuous_integration
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="trace_archiving_ci_jobs",env="gstg",monitor="global",stage="main",type="ci-runners"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="trace_archiving_ci_jobs",env="gstg",monitor="global",stage="main",type="ci-runners"}
