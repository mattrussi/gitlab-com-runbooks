# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/service-component-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'Service Component Alerts: websockets'
  interval: 1m
  rules:
  - alert: WebsocketsServiceLoadbalancerErrorSLOViolation
    for: 2m
    annotations:
      title: The loadbalancer SLI of the websockets service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="loadbalancer",env="gstg",monitor="global",type="websockets"}
          > (14.4 * 0.000500)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="loadbalancer",env="gstg",monitor="global",type="websockets"}
          > (14.4 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="loadbalancer",env="gstg",monitor="global",type="websockets"}) >= 1
      )
  - alert: WebsocketsServiceLoadbalancerErrorSLOViolation
    for: 2m
    annotations:
      title: The loadbalancer SLI of the websockets service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="loadbalancer",env="gstg",monitor="global",type="websockets"}
          > (6 * 0.000500)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="loadbalancer",env="gstg",monitor="global",type="websockets"}
          > (6 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="loadbalancer",env="gstg",monitor="global",type="websockets"}) >= 0.16667
      )
  - alert: WebsocketsServiceLoadbalancerErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The loadbalancer SLI of the websockets service in region `{{ $labels.region
        }}` has an error rate violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_1h{component="loadbalancer",env="gstg",monitor="global",type="websockets"}
          > (14.4 * 0.000500)
        )
        and on (env,environment,tier,type,stage,region,component)
        (
          gitlab_regional_sli_errors:ratio_5m{component="loadbalancer",env="gstg",monitor="global",type="websockets"}
          > (14.4 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="loadbalancer",env="gstg",monitor="global",type="websockets"}) >= 1
      )
  - alert: WebsocketsServiceLoadbalancerErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The loadbalancer SLI of the websockets service in region `{{ $labels.region
        }}` has an error rate violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3255520955"
      grafana_variables: environment,stage
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_6h{component="loadbalancer",env="gstg",monitor="global",type="websockets"}
          > (6 * 0.000500)
        )
        and on (env,environment,tier,type,stage,region,component)
        (
          gitlab_regional_sli_errors:ratio_30m{component="loadbalancer",env="gstg",monitor="global",type="websockets"}
          > (6 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="loadbalancer",env="gstg",monitor="global",type="websockets"}) >= 0.16667
      )
  - alert: WebsocketsServiceLoadbalancerTrafficCessation
    for: 5m
    annotations:
      title: The loadbalancer SLI of the websockets service (`{{ $labels.stage }}`
        stage) has not received any traffic in the past 30m
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="loadbalancer",env="gstg",monitor="global",stage="main",type="websockets"} == 0
      and
      gitlab_component_ops:rate_30m{component="loadbalancer",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h >= 0.16666666666666666
  - alert: WebsocketsServiceLoadbalancerTrafficAbsent
    for: 30m
    annotations:
      title: The loadbalancer SLI of the websockets service (`{{ $labels.stage }}`
        stage) has not reported any traffic in the past 30m
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="loadbalancer",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="loadbalancer",env="gstg",monitor="global",stage="main",type="websockets"}
  - alert: WebsocketsServiceLoadbalancerTrafficCessationRegional
    for: 5m
    annotations:
      title: The loadbalancer SLI of the websockets service in region `{{ $labels.region
        }}` has not received any traffic in the past 30m
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="loadbalancer",env="gstg",monitor="global",stage="main",type="websockets"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="loadbalancer",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h >= 0.16666666666666666
  - alert: WebsocketsServiceLoadbalancerTrafficAbsentRegional
    for: 30m
    annotations:
      title: The loadbalancer SLI of the websockets service in region `{{ $labels.region
        }}` has not reported any traffic in the past 30m
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "138982496"
      grafana_variables: environment,stage
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="loadbalancer",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="loadbalancer",env="gstg",monitor="global",stage="main",type="websockets"}
  - alert: WebsocketsServiceRailsQueueingApdexSLOViolation
    for: 2m
    annotations:
      title: The rails_queueing SLI of the websockets service (`{{ $labels.stage }}`
        stage) has an apdex violating SLO
      description: |
        Apdex for time workhorse spends waiting for a free Puma worker.  When this alerts, a noticeable proportion of requests are arriving a Puma when there are no free workers, and thus queue for processing until a worker is free.

        Such queuing adds latency to the request which will often be user visible.

        Typically other apdex alerts will also be out of spec at the same time; this SLI adds signal that queuing is part of the problem, rather than only being slow processing requests with spare capacity in Puma for other requests.

        It typically indicates higher use of the system than it has been provisioned to handle; it can be resolved by either adding Puma workers (pods and nodes) or by finding high RPS traffic that can be eliminated.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4121506195"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_rails_queue_duration_seconds_bucket{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="websockets"}[5m])
          )
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      confidence: 98%
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:confidence:ratio_1h{component="rails_queueing",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 14.4 * 0.050000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:confidence:ratio_5m{component="rails_queueing",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 14.4 * 0.050000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="rails_queueing",env="gstg",monitor="global",type="websockets"}) >= 1
      )
  - alert: WebsocketsServiceRailsQueueingApdexSLOViolation
    for: 2m
    annotations:
      title: The rails_queueing SLI of the websockets service (`{{ $labels.stage }}`
        stage) has an apdex violating SLO
      description: |
        Apdex for time workhorse spends waiting for a free Puma worker.  When this alerts, a noticeable proportion of requests are arriving a Puma when there are no free workers, and thus queue for processing until a worker is free.

        Such queuing adds latency to the request which will often be user visible.

        Typically other apdex alerts will also be out of spec at the same time; this SLI adds signal that queuing is part of the problem, rather than only being slow processing requests with spare capacity in Puma for other requests.

        It typically indicates higher use of the system than it has been provisioned to handle; it can be resolved by either adding Puma workers (pods and nodes) or by finding high RPS traffic that can be eliminated.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4121506195"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_rails_queue_duration_seconds_bucket{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="websockets"}[5m])
          )
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      confidence: 98%
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:confidence:ratio_6h{component="rails_queueing",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 6 * 0.050000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:confidence:ratio_30m{component="rails_queueing",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 6 * 0.050000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="rails_queueing",env="gstg",monitor="global",type="websockets"}) >= 0.16667
      )
  - alert: WebsocketsServiceRailsQueueingApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The rails_queueing SLI of the websockets service in region `{{ $labels.region
        }}` has an apdex violating SLO
      description: |
        Apdex for time workhorse spends waiting for a free Puma worker.  When this alerts, a noticeable proportion of requests are arriving a Puma when there are no free workers, and thus queue for processing until a worker is free.

        Such queuing adds latency to the request which will often be user visible.

        Typically other apdex alerts will also be out of spec at the same time; this SLI adds signal that queuing is part of the problem, rather than only being slow processing requests with spare capacity in Puma for other requests.

        It typically indicates higher use of the system than it has been provisioned to handle; it can be resolved by either adding Puma workers (pods and nodes) or by finding high RPS traffic that can be eliminated.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4121506195"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(gitlab_rails_queue_duration_seconds_bucket{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="websockets"}[5m])
          )
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      confidence: 98%
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:confidence:ratio_1h{component="rails_queueing",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 14.4 * 0.050000)
        )
        and on (env,environment,tier,type,stage,region,component)
        (
          gitlab_regional_sli_apdex:confidence:ratio_5m{component="rails_queueing",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 14.4 * 0.050000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="rails_queueing",env="gstg",monitor="global",type="websockets"}) >= 1
      )
  - alert: WebsocketsServiceRailsQueueingApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The rails_queueing SLI of the websockets service in region `{{ $labels.region
        }}` has an apdex violating SLO
      description: |
        Apdex for time workhorse spends waiting for a free Puma worker.  When this alerts, a noticeable proportion of requests are arriving a Puma when there are no free workers, and thus queue for processing until a worker is free.

        Such queuing adds latency to the request which will often be user visible.

        Typically other apdex alerts will also be out of spec at the same time; this SLI adds signal that queuing is part of the problem, rather than only being slow processing requests with spare capacity in Puma for other requests.

        It typically indicates higher use of the system than it has been provisioned to handle; it can be resolved by either adding Puma workers (pods and nodes) or by finding high RPS traffic that can be eliminated.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4121506195"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,region,le) (
            rate(gitlab_rails_queue_duration_seconds_bucket{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="websockets"}[5m])
          )
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      confidence: 98%
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:confidence:ratio_6h{component="rails_queueing",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 6 * 0.050000)
        )
        and on (env,environment,tier,type,stage,region,component)
        (
          gitlab_regional_sli_apdex:confidence:ratio_30m{component="rails_queueing",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 6 * 0.050000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="rails_queueing",env="gstg",monitor="global",type="websockets"}) >= 0.16667
      )
  - alert: WebsocketsServiceRailsQueueingTrafficCessation
    for: 5m
    annotations:
      title: The rails_queueing SLI of the websockets service (`{{ $labels.stage }}`
        stage) has not received any traffic in the past 30m
      description: |
        Apdex for time workhorse spends waiting for a free Puma worker.  When this alerts, a noticeable proportion of requests are arriving a Puma when there are no free workers, and thus queue for processing until a worker is free.

        Such queuing adds latency to the request which will often be user visible.

        Typically other apdex alerts will also be out of spec at the same time; this SLI adds signal that queuing is part of the problem, rather than only being slow processing requests with spare capacity in Puma for other requests.

        It typically indicates higher use of the system than it has been provisioned to handle; it can be resolved by either adding Puma workers (pods and nodes) or by finding high RPS traffic that can be eliminated.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1904440154"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_rails_queue_duration_seconds_count{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="rails_queueing",env="gstg",monitor="global",stage="main",type="websockets"} == 0
      and
      gitlab_component_ops:rate_30m{component="rails_queueing",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h >= 0.16666666666666666
  - alert: WebsocketsServiceRailsQueueingTrafficAbsent
    for: 30m
    annotations:
      title: The rails_queueing SLI of the websockets service (`{{ $labels.stage }}`
        stage) has not reported any traffic in the past 30m
      description: |
        Apdex for time workhorse spends waiting for a free Puma worker.  When this alerts, a noticeable proportion of requests are arriving a Puma when there are no free workers, and thus queue for processing until a worker is free.

        Such queuing adds latency to the request which will often be user visible.

        Typically other apdex alerts will also be out of spec at the same time; this SLI adds signal that queuing is part of the problem, rather than only being slow processing requests with spare capacity in Puma for other requests.

        It typically indicates higher use of the system than it has been provisioned to handle; it can be resolved by either adding Puma workers (pods and nodes) or by finding high RPS traffic that can be eliminated.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1904440154"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_rails_queue_duration_seconds_count{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="rails_queueing",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="rails_queueing",env="gstg",monitor="global",stage="main",type="websockets"}
  - alert: WebsocketsServiceRailsQueueingTrafficCessationRegional
    for: 5m
    annotations:
      title: The rails_queueing SLI of the websockets service in region `{{ $labels.region
        }}` has not received any traffic in the past 30m
      description: |
        Apdex for time workhorse spends waiting for a free Puma worker.  When this alerts, a noticeable proportion of requests are arriving a Puma when there are no free workers, and thus queue for processing until a worker is free.

        Such queuing adds latency to the request which will often be user visible.

        Typically other apdex alerts will also be out of spec at the same time; this SLI adds signal that queuing is part of the problem, rather than only being slow processing requests with spare capacity in Puma for other requests.

        It typically indicates higher use of the system than it has been provisioned to handle; it can be resolved by either adding Puma workers (pods and nodes) or by finding high RPS traffic that can be eliminated.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1904440154"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_rails_queue_duration_seconds_count{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="rails_queueing",env="gstg",monitor="global",stage="main",type="websockets"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="rails_queueing",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h >= 0.16666666666666666
  - alert: WebsocketsServiceRailsQueueingTrafficAbsentRegional
    for: 30m
    annotations:
      title: The rails_queueing SLI of the websockets service in region `{{ $labels.region
        }}` has not reported any traffic in the past 30m
      description: |
        Apdex for time workhorse spends waiting for a free Puma worker.  When this alerts, a noticeable proportion of requests are arriving a Puma when there are no free workers, and thus queue for processing until a worker is free.

        Such queuing adds latency to the request which will often be user visible.

        Typically other apdex alerts will also be out of spec at the same time; this SLI adds signal that queuing is part of the problem, rather than only being slow processing requests with spare capacity in Puma for other requests.

        It typically indicates higher use of the system than it has been provisioned to handle; it can be resolved by either adding Puma workers (pods and nodes) or by finding high RPS traffic that can be eliminated.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1904440154"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_rails_queue_duration_seconds_count{environment="{{ $labels.environment }}",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="rails_queueing",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="rails_queueing",env="gstg",monitor="global",stage="main",type="websockets"}
  - alert: WebsocketsServiceRailsRequestApdexSLOViolation
    for: 2m
    annotations:
      title: The rails_request SLI of the websockets service (`{{ $labels.stage }}`
        stage) has an apdex violating SLO
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "495984175"
      grafana_variables: environment,stage
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      confidence: 98%
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:confidence:ratio_1h{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 14.4 * 0.050000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:confidence:ratio_5m{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 14.4 * 0.050000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="rails_request",env="gstg",monitor="global",type="websockets"}) >= 1
      )
  - alert: WebsocketsServiceRailsRequestApdexSLOViolation
    for: 2m
    annotations:
      title: The rails_request SLI of the websockets service (`{{ $labels.stage }}`
        stage) has an apdex violating SLO
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "495984175"
      grafana_variables: environment,stage
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      confidence: 98%
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:confidence:ratio_6h{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 6 * 0.050000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:confidence:ratio_30m{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 6 * 0.050000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="rails_request",env="gstg",monitor="global",type="websockets"}) >= 0.16667
      )
  - alert: WebsocketsServiceRailsRequestApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The rails_request SLI of the websockets service in region `{{ $labels.region
        }}` has an apdex violating SLO
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "495984175"
      grafana_variables: environment,stage
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      confidence: 98%
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:confidence:ratio_1h{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 14.4 * 0.050000)
        )
        and on (env,environment,tier,type,stage,region,component)
        (
          gitlab_regional_sli_apdex:confidence:ratio_5m{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 14.4 * 0.050000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="rails_request",env="gstg",monitor="global",type="websockets"}) >= 1
      )
  - alert: WebsocketsServiceRailsRequestApdexSLOViolationRegional
    for: 2m
    annotations:
      title: The rails_request SLI of the websockets service in region `{{ $labels.region
        }}` has an apdex violating SLO
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "495984175"
      grafana_variables: environment,stage
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      confidence: 98%
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_apdex:confidence:ratio_6h{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 6 * 0.050000)
        )
        and on (env,environment,tier,type,stage,region,component)
        (
          gitlab_regional_sli_apdex:confidence:ratio_30m{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          < (1 - 6 * 0.050000)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="rails_request",env="gstg",monitor="global",type="websockets"}) >= 0.16667
      )
  - alert: WebsocketsServiceRailsRequestErrorSLOViolation
    for: 2m
    annotations:
      title: The rails_request SLI of the websockets service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "387946920"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_rails_request_error_total{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      confidence: 98%
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:confidence:ratio_1h{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          > (14.4 * 0.000500)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:confidence:ratio_5m{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          > (14.4 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="rails_request",env="gstg",monitor="global",type="websockets"}) >= 1
      )
  - alert: WebsocketsServiceRailsRequestErrorSLOViolation
    for: 2m
    annotations:
      title: The rails_request SLI of the websockets service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "387946920"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_rails_request_error_total{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      confidence: 98%
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:confidence:ratio_6h{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          > (6 * 0.000500)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:confidence:ratio_30m{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          > (6 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="rails_request",env="gstg",monitor="global",type="websockets"}) >= 0.16667
      )
  - alert: WebsocketsServiceRailsRequestErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The rails_request SLI of the websockets service in region `{{ $labels.region
        }}` has an error rate violating SLO
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "387946920"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_sli_rails_request_error_total{environment="{{ $labels.environment }}",job="gitlab-rails",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      confidence: 98%
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_errors:confidence:ratio_1h{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          > (14.4 * 0.000500)
        )
        and on (env,environment,tier,type,stage,region,component)
        (
          gitlab_regional_sli_errors:confidence:ratio_5m{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          > (14.4 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="rails_request",env="gstg",monitor="global",type="websockets"}) >= 1
      )
  - alert: WebsocketsServiceRailsRequestErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The rails_request SLI of the websockets service in region `{{ $labels.region
        }}` has an error rate violating SLO
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "387946920"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_sli_rails_request_error_total{environment="{{ $labels.environment }}",job="gitlab-rails",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      confidence: 98%
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_errors:confidence:ratio_6h{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          > (6 * 0.000500)
        )
        and on (env,environment,tier,type,stage,region,component)
        (
          gitlab_regional_sli_errors:confidence:ratio_30m{component="rails_request",confidence="98%",env="gstg",monitor="global",type="websockets"}
          > (6 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="rails_request",env="gstg",monitor="global",type="websockets"}) >= 0.16667
      )
  - alert: WebsocketsServiceRailsRequestTrafficCessation
    for: 5m
    annotations:
      title: The rails_request SLI of the websockets service (`{{ $labels.stage }}`
        stage) has not received any traffic in the past 30m
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "538903447"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_rails_request_total{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="rails_request",env="gstg",monitor="global",stage="main",type="websockets"} == 0
      and
      gitlab_component_ops:rate_30m{component="rails_request",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h >= 0.16666666666666666
  - alert: WebsocketsServiceRailsRequestTrafficAbsent
    for: 30m
    annotations:
      title: The rails_request SLI of the websockets service (`{{ $labels.stage }}`
        stage) has not reported any traffic in the past 30m
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "538903447"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_rails_request_total{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="rails_request",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="rails_request",env="gstg",monitor="global",stage="main",type="websockets"}
  - alert: WebsocketsServiceRailsRequestTrafficCessationRegional
    for: 5m
    annotations:
      title: The rails_request SLI of the websockets service in region `{{ $labels.region
        }}` has not received any traffic in the past 30m
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "538903447"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_sli_rails_request_total{environment="{{ $labels.environment }}",job="gitlab-rails",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="rails_request",env="gstg",monitor="global",stage="main",type="websockets"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="rails_request",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h >= 0.16666666666666666
  - alert: WebsocketsServiceRailsRequestTrafficAbsentRegional
    for: 30m
    annotations:
      title: The rails_request SLI of the websockets service in region `{{ $labels.region
        }}` has not reported any traffic in the past 30m
      description: |
        The number of requests meeting their duration target based on the urgency of the endpoint. By default, a request should take no more than 1s. But this can be adjusted by endpoint.

        Read more about this in the [documentation](https://docs.gitlab.com/ee/development/application_slis/rails_request_apdex.html).

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "538903447"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_sli_rails_request_total{environment="{{ $labels.environment }}",job="gitlab-rails",region="{{ $labels.region }}",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: in_source_metrics
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="rails_request",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="rails_request",env="gstg",monitor="global",stage="main",type="websockets"}
  - alert: WebsocketsServiceWorkhorseErrorSLOViolation
    for: 2m
    annotations:
      title: The workhorse SLI of the websockets service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        Monitors the Workhorse instance running in the Websockets fleet, via the HTTP interface. This only covers the initial protocal upgrade requests to `/-/cable`. https://gitlab.com/gitlab-org/gitlab/-/issues/296845 tracks making these metrics more useful for Websockets.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2047984749"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{code=~"^5.*",environment="{{ $labels.environment }}",job="gitlab-workhorse",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/api/",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="workhorse",env="gstg",monitor="global",type="websockets"}
          > (14.4 * 0.000500)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="workhorse",env="gstg",monitor="global",type="websockets"}
          > (14.4 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="workhorse",env="gstg",monitor="global",type="websockets"}) >= 1
      )
  - alert: WebsocketsServiceWorkhorseErrorSLOViolation
    for: 2m
    annotations:
      title: The workhorse SLI of the websockets service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        Monitors the Workhorse instance running in the Websockets fleet, via the HTTP interface. This only covers the initial protocal upgrade requests to `/-/cable`. https://gitlab.com/gitlab-org/gitlab/-/issues/296845 tracks making these metrics more useful for Websockets.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2047984749"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{code=~"^5.*",environment="{{ $labels.environment }}",job="gitlab-workhorse",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/api/",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="workhorse",env="gstg",monitor="global",type="websockets"}
          > (6 * 0.000500)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="workhorse",env="gstg",monitor="global",type="websockets"}
          > (6 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="workhorse",env="gstg",monitor="global",type="websockets"}) >= 0.16667
      )
  - alert: WebsocketsServiceWorkhorseErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The workhorse SLI of the websockets service in region `{{ $labels.region
        }}` has an error rate violating SLO
      description: |
        Monitors the Workhorse instance running in the Websockets fleet, via the HTTP interface. This only covers the initial protocal upgrade requests to `/-/cable`. https://gitlab.com/gitlab-org/gitlab/-/issues/296845 tracks making these metrics more useful for Websockets.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2047984749"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_workhorse_http_requests_total{code=~"^5.*",environment="{{ $labels.environment }}",job="gitlab-workhorse",region="{{ $labels.region }}",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/api/",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_1h{component="workhorse",env="gstg",monitor="global",type="websockets"}
          > (14.4 * 0.000500)
        )
        and on (env,environment,tier,type,stage,region,component)
        (
          gitlab_regional_sli_errors:ratio_5m{component="workhorse",env="gstg",monitor="global",type="websockets"}
          > (14.4 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_1h{component="workhorse",env="gstg",monitor="global",type="websockets"}) >= 1
      )
  - alert: WebsocketsServiceWorkhorseErrorSLOViolationRegional
    for: 2m
    annotations:
      title: The workhorse SLI of the websockets service in region `{{ $labels.region
        }}` has an error rate violating SLO
      description: |
        Monitors the Workhorse instance running in the Websockets fleet, via the HTTP interface. This only covers the initial protocal upgrade requests to `/-/cable`. https://gitlab.com/gitlab-org/gitlab/-/issues/296845 tracks making these metrics more useful for Websockets.

        Note that this alert is specific to the `{{ $labels.region }}` region.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2047984749"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_workhorse_http_requests_total{code=~"^5.*",environment="{{ $labels.environment }}",job="gitlab-workhorse",region="{{ $labels.region }}",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/api/",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_regional_sli_errors:ratio_6h{component="workhorse",env="gstg",monitor="global",type="websockets"}
          > (6 * 0.000500)
        )
        and on (env,environment,tier,type,stage,region,component)
        (
          gitlab_regional_sli_errors:ratio_30m{component="workhorse",env="gstg",monitor="global",type="websockets"}
          > (6 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,region,component)
      (
        sum by(env,environment,tier,type,stage,region,component) (gitlab_regional_sli_ops:rate_6h{component="workhorse",env="gstg",monitor="global",type="websockets"}) >= 0.16667
      )
  - alert: WebsocketsServiceWorkhorseTrafficCessation
    for: 5m
    annotations:
      title: The workhorse SLI of the websockets service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30m
      description: |
        Monitors the Workhorse instance running in the Websockets fleet, via the HTTP interface. This only covers the initial protocal upgrade requests to `/-/cable`. https://gitlab.com/gitlab-org/gitlab/-/issues/296845 tracks making these metrics more useful for Websockets.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "831392945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{environment="{{ $labels.environment }}",job="gitlab-workhorse",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/api/",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="workhorse",env="gstg",monitor="global",stage="main",type="websockets"} == 0
      and
      gitlab_component_ops:rate_30m{component="workhorse",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h >= 0.16666666666666666
  - alert: WebsocketsServiceWorkhorseTrafficAbsent
    for: 30m
    annotations:
      title: The workhorse SLI of the websockets service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30m
      description: |
        Monitors the Workhorse instance running in the Websockets fleet, via the HTTP interface. This only covers the initial protocal upgrade requests to `/-/cable`. https://gitlab.com/gitlab-org/gitlab/-/issues/296845 tracks making these metrics more useful for Websockets.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "831392945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{environment="{{ $labels.environment }}",job="gitlab-workhorse",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/api/",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="workhorse",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="workhorse",env="gstg",monitor="global",stage="main",type="websockets"}
  - alert: WebsocketsServiceWorkhorseTrafficCessationRegional
    for: 5m
    annotations:
      title: The workhorse SLI of the websockets service in region `{{ $labels.region
        }}` has not received any traffic in the past 30m
      description: |
        Monitors the Workhorse instance running in the Websockets fleet, via the HTTP interface. This only covers the initial protocal upgrade requests to `/-/cable`. https://gitlab.com/gitlab-org/gitlab/-/issues/296845 tracks making these metrics more useful for Websockets.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "831392945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_workhorse_http_requests_total{environment="{{ $labels.environment }}",job="gitlab-workhorse",region="{{ $labels.region }}",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/api/",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_30m{component="workhorse",env="gstg",monitor="global",stage="main",type="websockets"} == 0
      and
      gitlab_regional_sli_ops:rate_30m{component="workhorse",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h >= 0.16666666666666666
  - alert: WebsocketsServiceWorkhorseTrafficAbsentRegional
    for: 30m
    annotations:
      title: The workhorse SLI of the websockets service in region `{{ $labels.region
        }}` has not reported any traffic in the past 30m
      description: |
        Monitors the Workhorse instance running in the Websockets fleet, via the HTTP interface. This only covers the initial protocal upgrade requests to `/-/cable`. https://gitlab.com/gitlab-org/gitlab/-/issues/296845 tracks making these metrics more useful for Websockets.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Note that this alert is specific to the `{{ $labels.region }}` region.
      grafana_dashboard_id: websockets-main/websockets-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/websockets-main/websockets-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-gstg
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "831392945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,region) (
          rate(gitlab_workhorse_http_requests_total{environment="{{ $labels.environment }}",job="gitlab-workhorse",region="{{ $labels.region }}",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/api/",stage="{{ $labels.stage }}",type="websockets"}[5m])
        )
      runbook: docs/websockets/README.md#alerts
    labels:
      aggregation: regional_component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_regional_sli_ops:rate_5m{component="workhorse",env="gstg",monitor="global",stage="main",type="websockets"} offset 1h
      unless
      gitlab_regional_sli_ops:rate_5m{component="workhorse",env="gstg",monitor="global",stage="main",type="websockets"}
