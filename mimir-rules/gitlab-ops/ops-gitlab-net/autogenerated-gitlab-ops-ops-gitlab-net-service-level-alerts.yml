# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/service-component-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'Service Component Alerts: ops-gitlab-net'
  interval: 1m
  rules:
  - alert: OpsGitlabNetServiceGitlabSshdApdexSLOViolation
    for: 2m
    annotations:
      title: The gitlab_sshd SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        Monitors Gitlab-sshd, using the connections bucket, and http requests bucket.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2395479737"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_shell_sshd_session_established_duration_seconds_bucket{environment="{{ $labels.environment }}",job="gitlab-shell",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
          )
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: source_code_management
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="gitlab_sshd",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_5m{component="gitlab_sshd",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="gitlab_sshd",env="ops",monitor="global",type="ops-gitlab-net"}) >= 1
      )
  - alert: OpsGitlabNetServiceGitlabSshdApdexSLOViolation
    for: 2m
    annotations:
      title: The gitlab_sshd SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        Monitors Gitlab-sshd, using the connections bucket, and http requests bucket.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2395479737"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_shell_sshd_session_established_duration_seconds_bucket{environment="{{ $labels.environment }}",job="gitlab-shell",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
          )
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: source_code_management
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="gitlab_sshd",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_30m{component="gitlab_sshd",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="gitlab_sshd",env="ops",monitor="global",type="ops-gitlab-net"}) >= 0.16667
      )
  - alert: OpsGitlabNetServiceGitlabSshdErrorSLOViolation
    for: 2m
    annotations:
      title: The gitlab_sshd SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        Monitors Gitlab-sshd, using the connections bucket, and http requests bucket.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2213856730"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli:shell_sshd_sessions:errors_total{environment="{{ $labels.environment }}",job="gitlab-shell",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: source_code_management
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="gitlab_sshd",env="ops",monitor="global",type="ops-gitlab-net"}
          > (14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="gitlab_sshd",env="ops",monitor="global",type="ops-gitlab-net"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="gitlab_sshd",env="ops",monitor="global",type="ops-gitlab-net"}) >= 1
      )
  - alert: OpsGitlabNetServiceGitlabSshdErrorSLOViolation
    for: 2m
    annotations:
      title: The gitlab_sshd SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        Monitors Gitlab-sshd, using the connections bucket, and http requests bucket.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2213856730"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli:shell_sshd_sessions:errors_total{environment="{{ $labels.environment }}",job="gitlab-shell",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: source_code_management
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="gitlab_sshd",env="ops",monitor="global",type="ops-gitlab-net"}
          > (6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="gitlab_sshd",env="ops",monitor="global",type="ops-gitlab-net"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="gitlab_sshd",env="ops",monitor="global",type="ops-gitlab-net"}) >= 0.16667
      )
  - alert: OpsGitlabNetServiceGitlabSshdTrafficCessation
    for: 5m
    annotations:
      title: The gitlab_sshd SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        Monitors Gitlab-sshd, using the connections bucket, and http requests bucket.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "315783164"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli:shell_sshd_sessions:total{environment="{{ $labels.environment }}",job="gitlab-shell",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: source_code_management
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="gitlab_sshd",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} == 0
      and
      gitlab_component_ops:rate_30m{component="gitlab_sshd",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h >= 0.16666666666666666
  - alert: OpsGitlabNetServiceGitlabSshdTrafficAbsent
    for: 30m
    annotations:
      title: The gitlab_sshd SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        Monitors Gitlab-sshd, using the connections bucket, and http requests bucket.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "315783164"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli:shell_sshd_sessions:total{environment="{{ $labels.environment }}",job="gitlab-shell",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: source_code_management
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="gitlab_sshd",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="gitlab_sshd",env="ops",monitor="global",stage="main",type="ops-gitlab-net"}
  - alert: OpsGitlabNetServiceGoserverApdexSLOViolation
    for: 2m
    annotations:
      title: The goserver SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has an apdex violating SLO
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "877804374"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(grpc_server_handling_seconds_bucket{environment="{{ $labels.environment }}",grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindCommit|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|GetArchive|LastCommitForPath|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|RepositorySize|SSHUploadPackWithSidechannel|UpdateHook|WriteRef",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
            or
            rate(grpc_server_handling_seconds_bucket{environment="{{ $labels.environment }}",grpc_method=~"FindCommit|GetArchive|LastCommitForPath|RepositorySize|WriteRef",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
            or
            rate(grpc_server_handling_seconds_bucket{environment="{{ $labels.environment }}",grpc_service="gitaly.OperationService",grpc_type="unary",job="gitaly",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
          )
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="goserver",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_5m{component="goserver",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="goserver",env="ops",monitor="global",type="ops-gitlab-net"}) >= 1
      )
  - alert: OpsGitlabNetServiceGoserverApdexSLOViolation
    for: 2m
    annotations:
      title: The goserver SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has an apdex violating SLO
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "877804374"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(grpc_server_handling_seconds_bucket{environment="{{ $labels.environment }}",grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindCommit|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|GetArchive|LastCommitForPath|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|RepositorySize|SSHUploadPackWithSidechannel|UpdateHook|WriteRef",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
            or
            rate(grpc_server_handling_seconds_bucket{environment="{{ $labels.environment }}",grpc_method=~"FindCommit|GetArchive|LastCommitForPath|RepositorySize|WriteRef",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
            or
            rate(grpc_server_handling_seconds_bucket{environment="{{ $labels.environment }}",grpc_service="gitaly.OperationService",grpc_type="unary",job="gitaly",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
          )
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="goserver",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_30m{component="goserver",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="goserver",env="ops",monitor="global",type="ops-gitlab-net"}) >= 0.16667
      )
  - alert: OpsGitlabNetServiceGoserverErrorSLOViolation
    for: 2m
    annotations:
      title: The goserver SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "594670537"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",grpc_code!~"AlreadyExists|Canceled|DeadlineExceeded|FailedPrecondition|InvalidArgument|NotFound|OK|PermissionDenied|ResourceExhausted|Unauthenticated",job="gitaly",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(gitaly_service_client_requests_total{deadline_type!="limited",environment="{{ $labels.environment }}",grpc_code="DeadlineExceeded",job="gitaly",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m]), "_c", "1", "", "")
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="goserver",env="ops",monitor="global",type="ops-gitlab-net"}
          > (14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="goserver",env="ops",monitor="global",type="ops-gitlab-net"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="goserver",env="ops",monitor="global",type="ops-gitlab-net"}) >= 1
      )
  - alert: OpsGitlabNetServiceGoserverErrorSLOViolation
    for: 2m
    annotations:
      title: The goserver SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "594670537"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",grpc_code!~"AlreadyExists|Canceled|DeadlineExceeded|FailedPrecondition|InvalidArgument|NotFound|OK|PermissionDenied|ResourceExhausted|Unauthenticated",job="gitaly",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(gitaly_service_client_requests_total{deadline_type!="limited",environment="{{ $labels.environment }}",grpc_code="DeadlineExceeded",job="gitaly",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m]), "_c", "1", "", "")
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="goserver",env="ops",monitor="global",type="ops-gitlab-net"}
          > (6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="goserver",env="ops",monitor="global",type="ops-gitlab-net"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="goserver",env="ops",monitor="global",type="ops-gitlab-net"}) >= 0.16667
      )
  - alert: OpsGitlabNetServiceGoserverTrafficCessation
    for: 5m
    annotations:
      title: The goserver SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has not received any traffic in the past 30m
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1687078843"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",job="gitaly",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: gitaly
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="goserver",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} == 0
      and
      gitlab_component_ops:rate_30m{component="goserver",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h >= 0.16666666666666666
  - alert: OpsGitlabNetServiceGoserverTrafficAbsent
    for: 30m
    annotations:
      title: The goserver SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has not reported any traffic in the past 30m
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1687078843"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",job="gitaly",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: gitaly
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="goserver",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="goserver",env="ops",monitor="global",stage="main",type="ops-gitlab-net"}
  - alert: OpsGitlabNetServicePumaApdexSLOViolation
    for: 2m
    annotations:
      title: The puma SLI of the ops-gitlab-net service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        Aggregation of most web requests that pass through the puma to the GitLab rails monolith. Healthchecks are excluded.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "561966508"
      grafana_variables: environment,stage
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="puma",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_5m{component="puma",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="puma",env="ops",monitor="global",type="ops-gitlab-net"}) >= 1
      )
  - alert: OpsGitlabNetServicePumaApdexSLOViolation
    for: 2m
    annotations:
      title: The puma SLI of the ops-gitlab-net service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        Aggregation of most web requests that pass through the puma to the GitLab rails monolith. Healthchecks are excluded.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "561966508"
      grafana_variables: environment,stage
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="puma",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_30m{component="puma",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="puma",env="ops",monitor="global",type="ops-gitlab-net"}) >= 0.16667
      )
  - alert: OpsGitlabNetServicePumaErrorSLOViolation
    for: 2m
    annotations:
      title: The puma SLI of the ops-gitlab-net service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        Aggregation of most web requests that pass through the puma to the GitLab rails monolith. Healthchecks are excluded.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2425637513"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(http_requests_total{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",status=~"5..",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="puma",env="ops",monitor="global",type="ops-gitlab-net"}
          > (14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="puma",env="ops",monitor="global",type="ops-gitlab-net"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="puma",env="ops",monitor="global",type="ops-gitlab-net"}) >= 1
      )
  - alert: OpsGitlabNetServicePumaErrorSLOViolation
    for: 2m
    annotations:
      title: The puma SLI of the ops-gitlab-net service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        Aggregation of most web requests that pass through the puma to the GitLab rails monolith. Healthchecks are excluded.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2425637513"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(http_requests_total{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",status=~"5..",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="puma",env="ops",monitor="global",type="ops-gitlab-net"}
          > (6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="puma",env="ops",monitor="global",type="ops-gitlab-net"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="puma",env="ops",monitor="global",type="ops-gitlab-net"}) >= 0.16667
      )
  - alert: OpsGitlabNetServicePumaTrafficCessation
    for: 5m
    annotations:
      title: The puma SLI of the ops-gitlab-net service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30m
      description: |
        Aggregation of most web requests that pass through the puma to the GitLab rails monolith. Healthchecks are excluded.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "110019945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(http_requests_total{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="puma",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} == 0
      and
      gitlab_component_ops:rate_30m{component="puma",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h >= 0.16666666666666666
  - alert: OpsGitlabNetServicePumaTrafficAbsent
    for: 30m
    annotations:
      title: The puma SLI of the ops-gitlab-net service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30m
      description: |
        Aggregation of most web requests that pass through the puma to the GitLab rails monolith. Healthchecks are excluded.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "110019945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(http_requests_total{environment="{{ $labels.environment }}",job="gitlab-rails",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="puma",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="puma",env="ops",monitor="global",stage="main",type="ops-gitlab-net"}
  - alert: OpsGitlabNetServiceRailsSqlApdexSLOViolation
    for: 2m
    annotations:
      title: The rails_sql SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has an apdex violating SLO
      description: |
        Represents all SQL transactions issued through ActiveRecord from the Rails monolith (web, api, websockets, but not sidekiq) to the database. Durations can be impacted by various conditions other than the database, including Ruby thread contention and network conditions.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2459326260"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_sql_primary_duration_seconds_bucket{environment="{{ $labels.environment }}",job!="sidekiq",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
          )
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="rails_sql",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_5m{component="rails_sql",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="rails_sql",env="ops",monitor="global",type="ops-gitlab-net"}) >= 1
      )
  - alert: OpsGitlabNetServiceRailsSqlApdexSLOViolation
    for: 2m
    annotations:
      title: The rails_sql SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has an apdex violating SLO
      description: |
        Represents all SQL transactions issued through ActiveRecord from the Rails monolith (web, api, websockets, but not sidekiq) to the database. Durations can be impacted by various conditions other than the database, including Ruby thread contention and network conditions.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2459326260"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_sql_primary_duration_seconds_bucket{environment="{{ $labels.environment }}",job!="sidekiq",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
          )
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="rails_sql",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_30m{component="rails_sql",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="rails_sql",env="ops",monitor="global",type="ops-gitlab-net"}) >= 0.16667
      )
  - alert: OpsGitlabNetServiceRailsSqlTrafficCessation
    for: 5m
    annotations:
      title: The rails_sql SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has not received any traffic in the past 30m
      description: |
        Represents all SQL transactions issued through ActiveRecord from the Rails monolith (web, api, websockets, but not sidekiq) to the database. Durations can be impacted by various conditions other than the database, including Ruby thread contention and network conditions.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3345453447"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sql_primary_duration_seconds_bucket{environment="{{ $labels.environment }}",job!="sidekiq",le="+Inf",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="rails_sql",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} == 0
      and
      gitlab_component_ops:rate_30m{component="rails_sql",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h >= 0.16666666666666666
  - alert: OpsGitlabNetServiceRailsSqlTrafficAbsent
    for: 30m
    annotations:
      title: The rails_sql SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has not reported any traffic in the past 30m
      description: |
        Represents all SQL transactions issued through ActiveRecord from the Rails monolith (web, api, websockets, but not sidekiq) to the database. Durations can be impacted by various conditions other than the database, including Ruby thread contention and network conditions.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3345453447"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sql_primary_duration_seconds_bucket{environment="{{ $labels.environment }}",job!="sidekiq",le="+Inf",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="rails_sql",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="rails_sql",env="ops",monitor="global",stage="main",type="ops-gitlab-net"}
  - alert: OpsGitlabNetServiceRegistryServerApdexSLOViolation
    for: 2m
    annotations:
      title: The registry_server SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        Aggregation of all registry HTTP requests.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2595080210"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(registry_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",job="gitlab-registry",route!~"/v2/{name}/blobs/uploads/{uuid}|/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
          )
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="registry_server",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_5m{component="registry_server",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="registry_server",env="ops",monitor="global",type="ops-gitlab-net"}) >= 1
      )
  - alert: OpsGitlabNetServiceRegistryServerApdexSLOViolation
    for: 2m
    annotations:
      title: The registry_server SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        Aggregation of all registry HTTP requests.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2595080210"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(registry_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",job="gitlab-registry",route!~"/v2/{name}/blobs/uploads/{uuid}|/v2/{name}/manifests/{reference}",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
          )
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="registry_server",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_30m{component="registry_server",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="registry_server",env="ops",monitor="global",type="ops-gitlab-net"}) >= 0.16667
      )
  - alert: OpsGitlabNetServiceRegistryServerErrorSLOViolation
    for: 2m
    annotations:
      title: The registry_server SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        Aggregation of all registry HTTP requests.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1063087290"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_http_requests_total{code=~"5..",environment="{{ $labels.environment }}",job="gitlab-registry",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="registry_server",env="ops",monitor="global",type="ops-gitlab-net"}
          > (14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="registry_server",env="ops",monitor="global",type="ops-gitlab-net"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="registry_server",env="ops",monitor="global",type="ops-gitlab-net"}) >= 1
      )
  - alert: OpsGitlabNetServiceRegistryServerErrorSLOViolation
    for: 2m
    annotations:
      title: The registry_server SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        Aggregation of all registry HTTP requests.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1063087290"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_http_requests_total{code=~"5..",environment="{{ $labels.environment }}",job="gitlab-registry",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="registry_server",env="ops",monitor="global",type="ops-gitlab-net"}
          > (6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="registry_server",env="ops",monitor="global",type="ops-gitlab-net"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="registry_server",env="ops",monitor="global",type="ops-gitlab-net"}) >= 0.16667
      )
  - alert: OpsGitlabNetServiceRegistryServerTrafficCessation
    for: 5m
    annotations:
      title: The registry_server SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        Aggregation of all registry HTTP requests.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1064354686"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_http_requests_total{environment="{{ $labels.environment }}",job="gitlab-registry",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="registry_server",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} == 0
      and
      gitlab_component_ops:rate_30m{component="registry_server",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h >= 0.16666666666666666
  - alert: OpsGitlabNetServiceRegistryServerTrafficAbsent
    for: 30m
    annotations:
      title: The registry_server SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        Aggregation of all registry HTTP requests.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1064354686"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_http_requests_total{environment="{{ $labels.environment }}",job="gitlab-registry",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="registry_server",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="registry_server",env="ops",monitor="global",stage="main",type="ops-gitlab-net"}
  - alert: OpsGitlabNetServiceSidekiqExecutionApdexSLOViolation
    for: 2m
    annotations:
      title: The sidekiq_execution SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        The number of Sidekiq jobs meeting their execution duration target based on the urgency of the worker. By default, execution of a job should take no more than 300 seconds. But this can be adjusted by the urgency of the worker.

        Read more about this in the [runbooks doc](https://gitlab.com/gitlab-com/runbooks/-/blob/master/docs/sidekiq/sidekiq-slis.md).

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1200908149"
      grafana_variables: environment,stage
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="sidekiq_execution",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_5m{component="sidekiq_execution",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="sidekiq_execution",env="ops",monitor="global",type="ops-gitlab-net"}) >= 1
      )
  - alert: OpsGitlabNetServiceSidekiqExecutionApdexSLOViolation
    for: 2m
    annotations:
      title: The sidekiq_execution SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        The number of Sidekiq jobs meeting their execution duration target based on the urgency of the worker. By default, execution of a job should take no more than 300 seconds. But this can be adjusted by the urgency of the worker.

        Read more about this in the [runbooks doc](https://gitlab.com/gitlab-com/runbooks/-/blob/master/docs/sidekiq/sidekiq-slis.md).

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1200908149"
      grafana_variables: environment,stage
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="sidekiq_execution",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_30m{component="sidekiq_execution",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="sidekiq_execution",env="ops",monitor="global",type="ops-gitlab-net"}) >= 0.16667
      )
  - alert: OpsGitlabNetServiceSidekiqExecutionErrorSLOViolation
    for: 2m
    annotations:
      title: The sidekiq_execution SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        The number of Sidekiq jobs meeting their execution duration target based on the urgency of the worker. By default, execution of a job should take no more than 300 seconds. But this can be adjusted by the urgency of the worker.

        Read more about this in the [runbooks doc](https://gitlab.com/gitlab-com/runbooks/-/blob/master/docs/sidekiq/sidekiq-slis.md).

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4267233911"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_sidekiq_execution_error_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="sidekiq_execution",env="ops",monitor="global",type="ops-gitlab-net"}
          > (14.4 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="sidekiq_execution",env="ops",monitor="global",type="ops-gitlab-net"}
          > (14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="sidekiq_execution",env="ops",monitor="global",type="ops-gitlab-net"}) >= 1
      )
  - alert: OpsGitlabNetServiceSidekiqExecutionErrorSLOViolation
    for: 2m
    annotations:
      title: The sidekiq_execution SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        The number of Sidekiq jobs meeting their execution duration target based on the urgency of the worker. By default, execution of a job should take no more than 300 seconds. But this can be adjusted by the urgency of the worker.

        Read more about this in the [runbooks doc](https://gitlab.com/gitlab-com/runbooks/-/blob/master/docs/sidekiq/sidekiq-slis.md).

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4267233911"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_sidekiq_execution_error_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="sidekiq_execution",env="ops",monitor="global",type="ops-gitlab-net"}
          > (6 * 0.001000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="sidekiq_execution",env="ops",monitor="global",type="ops-gitlab-net"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="sidekiq_execution",env="ops",monitor="global",type="ops-gitlab-net"}) >= 0.16667
      )
  - alert: OpsGitlabNetServiceSidekiqExecutionTrafficCessation
    for: 5m
    annotations:
      title: The sidekiq_execution SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        The number of Sidekiq jobs meeting their execution duration target based on the urgency of the worker. By default, execution of a job should take no more than 300 seconds. But this can be adjusted by the urgency of the worker.

        Read more about this in the [runbooks doc](https://gitlab.com/gitlab-com/runbooks/-/blob/master/docs/sidekiq/sidekiq-slis.md).

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "597131258"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_sidekiq_execution_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="sidekiq_execution",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} == 0
      and
      gitlab_component_ops:rate_30m{component="sidekiq_execution",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h >= 0.16666666666666666
  - alert: OpsGitlabNetServiceSidekiqExecutionTrafficAbsent
    for: 30m
    annotations:
      title: The sidekiq_execution SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        The number of Sidekiq jobs meeting their execution duration target based on the urgency of the worker. By default, execution of a job should take no more than 300 seconds. But this can be adjusted by the urgency of the worker.

        Read more about this in the [runbooks doc](https://gitlab.com/gitlab-com/runbooks/-/blob/master/docs/sidekiq/sidekiq-slis.md).

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "597131258"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_sidekiq_execution_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="sidekiq_execution",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="sidekiq_execution",env="ops",monitor="global",stage="main",type="ops-gitlab-net"}
  - alert: OpsGitlabNetServiceSidekiqQueueingApdexSLOViolation
    for: 2m
    annotations:
      title: The sidekiq_queueing SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        The number of Sidekiq jobs meeting their queueing duration target based on the urgency of the worker. By default, queueing of a job should take no more than 60 seconds. But this can be adjusted by the urgency of the worker.

        Read more about this in the [runbooks doc](https://gitlab.com/gitlab-com/runbooks/-/blob/master/docs/sidekiq/sidekiq-slis.md).

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3643825112"
      grafana_variables: environment,stage
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="sidekiq_queueing",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_5m{component="sidekiq_queueing",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="sidekiq_queueing",env="ops",monitor="global",type="ops-gitlab-net"}) >= 1
      )
  - alert: OpsGitlabNetServiceSidekiqQueueingApdexSLOViolation
    for: 2m
    annotations:
      title: The sidekiq_queueing SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has an apdex violating SLO
      description: |
        The number of Sidekiq jobs meeting their queueing duration target based on the urgency of the worker. By default, queueing of a job should take no more than 60 seconds. But this can be adjusted by the urgency of the worker.

        Read more about this in the [runbooks doc](https://gitlab.com/gitlab-com/runbooks/-/blob/master/docs/sidekiq/sidekiq-slis.md).

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3643825112"
      grafana_variables: environment,stage
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="sidekiq_queueing",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_30m{component="sidekiq_queueing",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="sidekiq_queueing",env="ops",monitor="global",type="ops-gitlab-net"}) >= 0.16667
      )
  - alert: OpsGitlabNetServiceSidekiqQueueingTrafficCessation
    for: 5m
    annotations:
      title: The sidekiq_queueing SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30m
      description: |
        The number of Sidekiq jobs meeting their queueing duration target based on the urgency of the worker. By default, queueing of a job should take no more than 60 seconds. But this can be adjusted by the urgency of the worker.

        Read more about this in the [runbooks doc](https://gitlab.com/gitlab-com/runbooks/-/blob/master/docs/sidekiq/sidekiq-slis.md).

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "330011744"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_sidekiq_queueing_apdex_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="sidekiq_queueing",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} == 0
      and
      gitlab_component_ops:rate_30m{component="sidekiq_queueing",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h >= 0.16666666666666666
  - alert: OpsGitlabNetServiceSidekiqQueueingTrafficAbsent
    for: 30m
    annotations:
      title: The sidekiq_queueing SLI of the ops-gitlab-net service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30m
      description: |
        The number of Sidekiq jobs meeting their queueing duration target based on the urgency of the worker. By default, queueing of a job should take no more than 60 seconds. But this can be adjusted by the urgency of the worker.

        Read more about this in the [runbooks doc](https://gitlab.com/gitlab-com/runbooks/-/blob/master/docs/sidekiq/sidekiq-slis.md).

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "330011744"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_sli_sidekiq_queueing_apdex_total{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="sidekiq_queueing",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="sidekiq_queueing",env="ops",monitor="global",stage="main",type="ops-gitlab-net"}
  - alert: OpsGitlabNetServiceWorkhorseApdexSLOViolation
    for: 2m
    annotations:
      title: The workhorse SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has an apdex violating SLO
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2586818196"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_workhorse_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",job="gitlab-workhorse",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/([^/]+/){1,}[^/]+\\.git/git-receive-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-upload-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/info/refs\\z",route!="^/([^/]+/){1,}[^/]+\\.git/gitlab-lfs/objects/([0-9a-f]{64})/([0-9]+)\\z",route!="^/-/cable\\z",route!="^/api/v4/jobs/request\\z",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
          )
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="workhorse",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_5m{component="workhorse",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 14.4 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="workhorse",env="ops",monitor="global",type="ops-gitlab-net"}) >= 1
      )
  - alert: OpsGitlabNetServiceWorkhorseApdexSLOViolation
    for: 2m
    annotations:
      title: The workhorse SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has an apdex violating SLO
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2586818196"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(gitlab_workhorse_http_request_duration_seconds_bucket{environment="{{ $labels.environment }}",job="gitlab-workhorse",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/([^/]+/){1,}[^/]+\\.git/git-receive-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-upload-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/info/refs\\z",route!="^/([^/]+/){1,}[^/]+\\.git/gitlab-lfs/objects/([0-9a-f]{64})/([0-9]+)\\z",route!="^/-/cable\\z",route!="^/api/v4/jobs/request\\z",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
          )
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: apdex
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="workhorse",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_apdex:ratio_30m{component="workhorse",env="ops",monitor="global",type="ops-gitlab-net"}
          < (1 - 6 * 0.002000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="workhorse",env="ops",monitor="global",type="ops-gitlab-net"}) >= 0.16667
      )
  - alert: OpsGitlabNetServiceWorkhorseErrorSLOViolation
    for: 2m
    annotations:
      title: The workhorse SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2047984749"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{code=~"^5.*",environment="{{ $labels.environment }}",job="gitlab-workhorse",route!="^/-/health$",route!="^/-/(readiness|liveness)$",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="workhorse",env="ops",monitor="global",type="ops-gitlab-net"}
          > (14.4 * 0.005000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_5m{component="workhorse",env="ops",monitor="global",type="ops-gitlab-net"}
          > (14.4 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="workhorse",env="ops",monitor="global",type="ops-gitlab-net"}) >= 1
      )
  - alert: OpsGitlabNetServiceWorkhorseErrorSLOViolation
    for: 2m
    annotations:
      title: The workhorse SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has an error rate violating SLO
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2047984749"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{code=~"^5.*",environment="{{ $labels.environment }}",job="gitlab-workhorse",route!="^/-/health$",route!="^/-/(readiness|liveness)$",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: error
      slo_alert: "yes"
      team: foundations
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="workhorse",env="ops",monitor="global",type="ops-gitlab-net"}
          > (6 * 0.005000)
        )
        and on (env,environment,tier,type,stage,component)
        (
          gitlab_component_errors:ratio_30m{component="workhorse",env="ops",monitor="global",type="ops-gitlab-net"}
          > (6 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="workhorse",env="ops",monitor="global",type="ops-gitlab-net"}) >= 0.16667
      )
  - alert: OpsGitlabNetServiceWorkhorseTrafficCessation
    for: 5m
    annotations:
      title: The workhorse SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has not received any traffic in the past 30m
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        This alert signifies that the SLI is reporting a cessation of traffic; the signal is present, but is zero.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "831392945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{environment="{{ $labels.environment }}",job="gitlab-workhorse",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="workhorse",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} == 0
      and
      gitlab_component_ops:rate_30m{component="workhorse",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h >= 0.16666666666666666
  - alert: OpsGitlabNetServiceWorkhorseTrafficAbsent
    for: 30m
    annotations:
      title: The workhorse SLI of the ops-gitlab-net service (`{{ $labels.stage }}`
        stage) has not reported any traffic in the past 30m
      description: |
        Aggregation of most web requests that pass through workhorse, monitored via the HTTP interface. Excludes health, readiness and liveness requests. Some known slow requests, such as HTTP uploads, are excluded from the apdex score.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: ops-gitlab-net-main/ops-gitlab-net-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/ops-gitlab-net-main/ops-gitlab-net-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_datasource_id: mimir-gitlab-ops
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "831392945"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_http_requests_total{environment="{{ $labels.environment }}",job="gitlab-workhorse",stage="{{ $labels.stage }}",type="ops-gitlab-net"}[5m])
        )
      runbook: docs/ops-gitlab-net/README.md#alerts
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      rules_domain: general
      severity: s3
      sli_type: ops
      slo_alert: "no"
      team: foundations
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="workhorse",env="ops",monitor="global",stage="main",type="ops-gitlab-net"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="workhorse",env="ops",monitor="global",stage="main",type="ops-gitlab-net"}
