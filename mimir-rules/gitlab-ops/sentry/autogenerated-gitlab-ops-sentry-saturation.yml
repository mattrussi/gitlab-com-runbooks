# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/saturation.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: Saturation Rules (autogenerated)
  interval: 1m
  rules:
  - record: gitlab_component_saturation:ratio
    labels:
      component: kube_container_cpu
    expr: |
      quantile by(env,environment,shard,stage,tier,type) (
        0.99,
        clamp_min(
          clamp_max(
            (
              sum by (container,env,environment,pod,shard,stage,tier,type) (
                rate(container_cpu_usage_seconds_total:labeled{container!="", container!="POD", env="ops",type="sentry"}[1h])
              )
              unless on(container,env,environment,pod,shard,stage,tier,type) (
                last_over_time(container_spec_cpu_quota:labeled{container!="", container!="POD", env="ops",type="sentry"}[1h])
              )
            )
            /
            sum by(container,env,environment,pod,shard,stage,tier,type) (
              kube_pod_container_resource_requests:labeled{container!="", container!="POD", resource="cpu", env="ops",type="sentry"}
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: kube_container_cpu_limit
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            sum by (container,env,environment,pod,shard,stage,tier,type) (
              rate(container_cpu_usage_seconds_total:labeled{container!="", container!="POD", env="ops",type="sentry"}[5m])
            )
            /
            sum by(container,env,environment,pod,shard,stage,tier,type) (
              container_spec_cpu_quota:labeled{container!="", container!="POD", env="ops",type="sentry"}
              /
              container_spec_cpu_period:labeled{container!="", container!="POD", env="ops",type="sentry"}
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: kube_container_memory
    expr: |
      max by(deployment,env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            container_memory_working_set_bytes:labeled{container!="", container!="POD", env="ops",type="sentry"}
            /
            (container_spec_memory_limit_bytes:labeled{container!="", container!="POD", env="ops",type="sentry"} > 0)
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: kube_container_throttling
    expr: |
      quantile by(env,environment,shard,stage,tier,type) (
        0.99,
        clamp_min(
          clamp_max(
            avg by (container,env,environment,pod,shard,stage,tier,type)(
              rate(container_cpu_cfs_throttled_periods_total:labeled{container!="", env="ops",type="sentry"}[5m])
              /
              rate(container_cpu_cfs_periods_total:labeled{container!="", env="ops",type="sentry"}[5m])
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: kube_horizontalpodautoscaler_desired_replicas
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            kube_horizontalpodautoscaler_status_desired_replicas:labeled{env="ops",type="sentry", shard!~"database-throttled|elasticsearch|gitaly-throttled|urgent-authorized-projects", namespace!~"pubsubbeat"}
            /
            kube_horizontalpodautoscaler_spec_max_replicas:labeled{env="ops",type="sentry", shard!~"database-throttled|elasticsearch|gitaly-throttled|urgent-authorized-projects", namespace!~"pubsubbeat"}
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: open_fds
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            (
              process_open_fds{env="ops",type="sentry"}
              /
              process_max_fds{env="ops",type="sentry"}
            )
            or
            (
              ruby_file_descriptors{env="ops",type="sentry"}
              /
              ruby_process_max_fds{env="ops",type="sentry"}
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: pg_primary_cpu
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            avg without(cpu, mode) (
              1
              -
              (
                rate(node_cpu_seconds_total{mode="idle", env="ops",type="sentry"}[5m])
                and on(fqdn)
                pg_replication_is_replica{env="ops",type="sentry"} == 0
              )
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: pg_xid_wraparound
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            (
              max without (series) (
                label_replace(pg_database_wraparound_age_datfrozenxid{env="ops",type="sentry"}, "series", "datfrozenxid", "", "")
                or
                label_replace(pg_database_wraparound_age_datminmxid{env="ops",type="sentry"}, "series", "datminmxid", "", "")
              )
              and on (instance, job) (pg_replication_is_replica{env="ops",type="sentry"} == 0)
            )
            /
            (2^31 - 3000000)
            ,
            1)
        ,
        0)
      )
