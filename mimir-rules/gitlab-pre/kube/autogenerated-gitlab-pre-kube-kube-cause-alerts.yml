# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/kube-cause-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: kube_cause_alerts
  rules:
  - alert: KubeContainersWaitingInError
    for: 20m
    annotations:
      title: Containers for the `{{ $labels.type }}` service, `{{ $labels.stage }}`
        are unable to start.
      description: |
        More than 50% of the deployment's `maxSurge` setting consists of containers unable to start for reasons other than `ContainerCreating`.
      grafana_dashboard_id: alerts-kube_containers_waiting/alerts-containers-waiting
      grafana_dashboard_link: https://dashboards.gitlab.net/d/alerts-kube_containers_waiting/alerts-containers-waiting?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-type={{ $labels.type }}&var-stage={{ $labels.stage
        }}&var-cluster={{ $labels.cluster }}
      grafana_datasource_id: mimir-gitlab-pre
      grafana_min_zoom_hours: "6"
      grafana_variables: environment,type,stage,cluster
    labels:
      alert_type: cause
      pager: pagerduty
      runbook: docs/kube/alerts/KubeContainersWaitingInError.md
      severity: s2
      team: sre_reliability
    expr: |
      sum by (type, env, tier, stage, cluster) (
        kube_pod_container_status_waiting_reason:labeled{
          env="pre",type="kube",
          reason!="ContainerCreating",
        }
      )
      > 0
      >= on(type, env, tier, stage, cluster) (
        topk by(type, env, tier, stage, cluster) (1,
          kube_deployment_spec_strategy_rollingupdate_max_surge:labeled{env="pre",type="kube"}
        )
        * 0.5
      )
