# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/sli_aggregations.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'SLI Aggregations: registry - database - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:registry_database_queries_total:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,name,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_database_queries_total{env="pre",type=~"registry"}[5m] offset 30s)
      )
  - record: sli_aggregations:registry_database_query_duration_seconds_bucket:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,le,name,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_database_query_duration_seconds_bucket{env="pre",type=~"registry"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: registry - garbagecollector - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:registry_gc_run_duration_seconds_bucket:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,le,product_stage,region,shard,stage,stage_group,tier,type,worker) (
        rate(registry_gc_run_duration_seconds_bucket{env="pre",type=~"registry"}[5m] offset 30s)
      )
  - record: sli_aggregations:registry_gc_runs_total:rate_5m
    expr: |
      sum by (component,env,environment,error,feature_category,fqdn,product_stage,region,shard,stage,stage_group,tier,type,worker) (
        rate(registry_gc_runs_total{env="pre",type=~"registry"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: registry - loadbalancer - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:haproxy_backend_http_responses_total:rate_5m
    expr: |
      sum by (backend,code,component,env,environment,feature_category,fqdn,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(haproxy_backend_http_responses_total{backend=~"canary_registry|registry",env="pre",type=~"registry"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: registry - redis - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:registry_redis_single_commands_bucket:rate_5m
    expr: |
      sum by (command,component,env,environment,feature_category,fqdn,instance,le,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_redis_single_commands_bucket{env="pre",type=~"registry"}[5m] offset 30s)
      )
  - record: sli_aggregations:registry_redis_single_commands_count:rate_5m
    expr: |
      sum by (command,component,env,environment,feature_category,fqdn,instance,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_redis_single_commands_count{env="pre",type=~"registry"}[5m] offset 30s)
      )
  - record: sli_aggregations:registry_redis_single_errors_count:rate_5m
    expr: |
      sum by (command,component,env,environment,feature_category,fqdn,instance,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_redis_single_errors_count{env="pre",type=~"registry"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: registry - registry_cdn - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,product_stage,project_id,proxy_continent,region,response_code,response_code_class,shard,stage,stage_group,tier,type,url_map_name) (
        rate(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count{env="pre",project_id=~"gitlab-production",url_map_name=~"gprd-registry-cdn"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: registry - registry_server - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:registry_http_request_duration_seconds_bucket:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,le,method,product_stage,region,route,shard,stage,stage_group,tier,type) (
        rate(registry_http_request_duration_seconds_bucket{env="pre",type=~"registry"}[5m] offset 30s)
      )
  - record: sli_aggregations:registry_http_requests_total:rate_5m
    expr: |
      sum by (code,component,env,environment,feature_category,fqdn,method,product_stage,region,route,shard,stage,stage_group,tier,type) (
        rate(registry_http_requests_total{env="pre",type=~"registry"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: registry - server_route_blob_upload_uuid_deletes - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:registry_http_request_duration_seconds_count:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,method,product_stage,region,route,shard,stage,stage_group,tier,type) (
        rate(registry_http_request_duration_seconds_count{env="pre",method=~"delete|get|head|patch|post|put",route=~"/v2/\\{name\\}/blobs/uploads/\\{uuid\\}|/v2/\\{name\\}/manifests/\\{reference\\}",type=~"registry"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: registry - database - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:registry_database_queries_total:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,name,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_database_queries_total{env="pre",type=~"registry"}[30m] offset 30s)
      )
  - record: sli_aggregations:registry_database_query_duration_seconds_bucket:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,le,name,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_database_query_duration_seconds_bucket{env="pre",type=~"registry"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: registry - garbagecollector - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:registry_gc_run_duration_seconds_bucket:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,le,product_stage,region,shard,stage,stage_group,tier,type,worker) (
        rate(registry_gc_run_duration_seconds_bucket{env="pre",type=~"registry"}[30m] offset 30s)
      )
  - record: sli_aggregations:registry_gc_runs_total:rate_30m
    expr: |
      sum by (component,env,environment,error,feature_category,fqdn,product_stage,region,shard,stage,stage_group,tier,type,worker) (
        rate(registry_gc_runs_total{env="pre",type=~"registry"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: registry - loadbalancer - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:haproxy_backend_http_responses_total:rate_30m
    expr: |
      sum by (backend,code,component,env,environment,feature_category,fqdn,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(haproxy_backend_http_responses_total{backend=~"canary_registry|registry",env="pre",type=~"registry"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: registry - redis - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:registry_redis_single_commands_bucket:rate_30m
    expr: |
      sum by (command,component,env,environment,feature_category,fqdn,instance,le,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_redis_single_commands_bucket{env="pre",type=~"registry"}[30m] offset 30s)
      )
  - record: sli_aggregations:registry_redis_single_commands_count:rate_30m
    expr: |
      sum by (command,component,env,environment,feature_category,fqdn,instance,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_redis_single_commands_count{env="pre",type=~"registry"}[30m] offset 30s)
      )
  - record: sli_aggregations:registry_redis_single_errors_count:rate_30m
    expr: |
      sum by (command,component,env,environment,feature_category,fqdn,instance,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_redis_single_errors_count{env="pre",type=~"registry"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: registry - registry_cdn - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,product_stage,project_id,proxy_continent,region,response_code,response_code_class,shard,stage,stage_group,tier,type,url_map_name) (
        rate(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count{env="pre",project_id=~"gitlab-production",url_map_name=~"gprd-registry-cdn"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: registry - registry_server - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:registry_http_request_duration_seconds_bucket:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,le,method,product_stage,region,route,shard,stage,stage_group,tier,type) (
        rate(registry_http_request_duration_seconds_bucket{env="pre",type=~"registry"}[30m] offset 30s)
      )
  - record: sli_aggregations:registry_http_requests_total:rate_30m
    expr: |
      sum by (code,component,env,environment,feature_category,fqdn,method,product_stage,region,route,shard,stage,stage_group,tier,type) (
        rate(registry_http_requests_total{env="pre",type=~"registry"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: registry - server_route_blob_upload_uuid_deletes - 30m
    burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:registry_http_request_duration_seconds_count:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,method,product_stage,region,route,shard,stage,stage_group,tier,type) (
        rate(registry_http_request_duration_seconds_count{env="pre",method=~"delete|get|head|patch|post|put",route=~"/v2/\\{name\\}/blobs/uploads/\\{uuid\\}|/v2/\\{name\\}/manifests/\\{reference\\}",type=~"registry"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: registry - database - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:registry_database_queries_total:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,name,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_database_queries_total{env="pre",type=~"registry"}[1h] offset 30s)
      )
  - record: sli_aggregations:registry_database_query_duration_seconds_bucket:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,le,name,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_database_query_duration_seconds_bucket{env="pre",type=~"registry"}[1h] offset 30s)
      )
- name: 'SLI Aggregations: registry - garbagecollector - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:registry_gc_run_duration_seconds_bucket:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,le,product_stage,region,shard,stage,stage_group,tier,type,worker) (
        rate(registry_gc_run_duration_seconds_bucket{env="pre",type=~"registry"}[1h] offset 30s)
      )
  - record: sli_aggregations:registry_gc_runs_total:rate_1h
    expr: |
      sum by (component,env,environment,error,feature_category,fqdn,product_stage,region,shard,stage,stage_group,tier,type,worker) (
        rate(registry_gc_runs_total{env="pre",type=~"registry"}[1h] offset 30s)
      )
- name: 'SLI Aggregations: registry - loadbalancer - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:haproxy_backend_http_responses_total:rate_1h
    expr: |
      sum by (backend,code,component,env,environment,feature_category,fqdn,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(haproxy_backend_http_responses_total{backend=~"canary_registry|registry",env="pre",type=~"registry"}[1h] offset 30s)
      )
- name: 'SLI Aggregations: registry - redis - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:registry_redis_single_commands_bucket:rate_1h
    expr: |
      sum by (command,component,env,environment,feature_category,fqdn,instance,le,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_redis_single_commands_bucket{env="pre",type=~"registry"}[1h] offset 30s)
      )
  - record: sli_aggregations:registry_redis_single_commands_count:rate_1h
    expr: |
      sum by (command,component,env,environment,feature_category,fqdn,instance,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_redis_single_commands_count{env="pre",type=~"registry"}[1h] offset 30s)
      )
  - record: sli_aggregations:registry_redis_single_errors_count:rate_1h
    expr: |
      sum by (command,component,env,environment,feature_category,fqdn,instance,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(registry_redis_single_errors_count{env="pre",type=~"registry"}[1h] offset 30s)
      )
- name: 'SLI Aggregations: registry - registry_cdn - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,product_stage,project_id,proxy_continent,region,response_code,response_code_class,shard,stage,stage_group,tier,type,url_map_name) (
        rate(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count{env="pre",project_id=~"gitlab-production",url_map_name=~"gprd-registry-cdn"}[1h] offset 30s)
      )
- name: 'SLI Aggregations: registry - registry_server - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:registry_http_request_duration_seconds_bucket:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,le,method,product_stage,region,route,shard,stage,stage_group,tier,type) (
        rate(registry_http_request_duration_seconds_bucket{env="pre",type=~"registry"}[1h] offset 30s)
      )
  - record: sli_aggregations:registry_http_requests_total:rate_1h
    expr: |
      sum by (code,component,env,environment,feature_category,fqdn,method,product_stage,region,route,shard,stage,stage_group,tier,type) (
        rate(registry_http_requests_total{env="pre",type=~"registry"}[1h] offset 30s)
      )
- name: 'SLI Aggregations: registry - server_route_blob_upload_uuid_deletes - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:registry_http_request_duration_seconds_count:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,method,product_stage,region,route,shard,stage,stage_group,tier,type) (
        rate(registry_http_request_duration_seconds_count{env="pre",method=~"delete|get|head|patch|post|put",route=~"/v2/\\{name\\}/blobs/uploads/\\{uuid\\}|/v2/\\{name\\}/manifests/\\{reference\\}",type=~"registry"}[1h] offset 30s)
      )
