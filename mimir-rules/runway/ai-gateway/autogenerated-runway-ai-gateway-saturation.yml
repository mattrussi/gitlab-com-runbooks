# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/saturation.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: Saturation Rules (autogenerated)
  interval: 1m
  rules:
  - record: gitlab_component_saturation:ratio
    labels:
      component: gcp_quota_limit_vertex_ai
    expr: |
      max by(base_model,env,environment,location,region,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            (
              sum without (method) (stackdriver_aiplatform_googleapis_com_location_aiplatform_googleapis_com_quota_online_prediction_requests_per_base_model_usage{type="ai-gateway",base_model!="code-gecko"})
            /
              stackdriver_aiplatform_googleapis_com_location_aiplatform_googleapis_com_quota_online_prediction_requests_per_base_model_limit{type="ai-gateway",base_model!="code-gecko"}
            ) > 0
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: gcp_quota_limit_vertex_ai_code_gecko
    expr: |
      max by(base_model,env,environment,location,region,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            (
              sum without (method) (stackdriver_aiplatform_googleapis_com_location_aiplatform_googleapis_com_quota_online_prediction_requests_per_base_model_usage{type="ai-gateway",base_model="code-gecko"})
            /
              stackdriver_aiplatform_googleapis_com_location_aiplatform_googleapis_com_quota_online_prediction_requests_per_base_model_limit{type="ai-gateway",base_model="code-gecko"}
            ) > 0
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: max_concurrent_inferences
    expr: |
      max by(env,environment,model_engine,model_name,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            sum by (env,environment,model_engine,model_name,shard,stage,tier,type)(max_over_time(model_inferences_in_flight{type="ai-gateway"}[10m]))
            /
            min by (env,environment,model_engine,model_name,shard,stage,tier,type)(min_over_time(model_inferences_max_concurrent{type="ai-gateway"}[10m]))
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: max_concurrent_inferences_per_engine
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            sum by (env,environment,model_engine,shard,stage,tier,type)(max_over_time(model_inferences_in_flight{type="ai-gateway"}[10m]))
            /
            max by (env,environment,model_engine,shard,stage,tier,type)(min_over_time(model_inferences_max_concurrent{type="ai-gateway"}[10m]))
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: open_fds
    expr: |
      max by(env,environment,shard,stage,tier,type) (
        clamp_min(
          clamp_max(
            (
              process_open_fds{type="ai-gateway"}
              /
              process_max_fds{type="ai-gateway"}
            )
            or
            (
              ruby_file_descriptors{type="ai-gateway"}
              /
              ruby_process_max_fds{type="ai-gateway"}
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: runway_container_cpu_utilization
      stage: main
      tier: inf
    expr: |
      max by(env,environment,shard,type) (
        clamp_min(
          clamp_max(
            histogram_quantile(0.9999, sum by(le, env,environment,location,region,revision_name,shard,type)
              (
                avg_over_time(
                  stackdriver_cloud_run_revision_run_googleapis_com_container_cpu_utilizations_bucket{job="runway-exporter",type="ai-gateway"}[30m]
                )
              )
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: runway_container_instance_utilization
      stage: main
      tier: inf
    expr: |
      max by(env,environment,shard,type) (
        clamp_min(
          clamp_max(
            sum by (env,environment,location,region,revision_name,shard,type) (
              stackdriver_cloud_run_revision_run_googleapis_com_container_instance_count{job="runway-exporter",state="active",type="ai-gateway"}
            )
            /
            100
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: runway_container_max_concurrent_requests
      stage: main
      tier: inf
    expr: |
      max by(env,environment,shard,type) (
        clamp_min(
          clamp_max(
            histogram_quantile(0.9999, sum by(le, env,environment,location,region,revision_name,shard,type)
              (
                rate(
                  stackdriver_cloud_run_revision_run_googleapis_com_container_max_request_concurrencies_bucket{job="runway-exporter",state="active",type="ai-gateway"}[30m]
                )
              )
            ) / 100
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: runway_container_memory_utilization
      stage: main
      tier: inf
    expr: |
      max by(env,environment,shard,type) (
        clamp_min(
          clamp_max(
            histogram_quantile(0.9999, sum by(le, env,environment,region,revision_name,shard,type)
              (
                avg_over_time(
                  stackdriver_cloud_run_revision_run_googleapis_com_container_memory_utilizations_bucket{job="runway-exporter",type="ai-gateway"}[30m]
                )
              )
            )
            ,
            1)
        ,
        0)
      )
