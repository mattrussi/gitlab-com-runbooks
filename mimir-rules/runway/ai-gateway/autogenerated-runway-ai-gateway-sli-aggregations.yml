# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/sli_aggregations.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'SLI Aggregations: ai-gateway - inference_anthropic - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:inference_request_duration_seconds_bucket:rate_5m
    expr: |
      sum by (component,env,environment,error,feature_category,fqdn,le,model_engine,model_name,product_stage,region,shard,stage,stage_group,streaming,tier,type) (
        rate(inference_request_duration_seconds_bucket{error=~"no",streaming=~"no",type=~"ai-gateway"}[5m] offset 30s)
      )
  - record: sli_aggregations:model_inferences_total:rate_5m
    expr: |
      sum by (component,env,environment,error,feature_category,fqdn,model_engine,model_name,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(model_inferences_total{type=~"ai-gateway"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: ai-gateway - runway_ingress - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:stackdriver_cloud_run_revision_run_googleapis_com_request_count:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,location,product_stage,region,response_code,response_code_class,revision_name,shard,stage,stage_group,tier,type) (
        rate(stackdriver_cloud_run_revision_run_googleapis_com_request_count{type=~"ai-gateway"}[5m] offset 30s)
      )
  - record: sli_aggregations:stackdriver_cloud_run_revision_run_googleapis_com_request_latencies_bucket:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,le,location,product_stage,region,response_code,response_code_class,revision_name,shard,stage,stage_group,tier,type) (
        rate(stackdriver_cloud_run_revision_run_googleapis_com_request_latencies_bucket{type=~"ai-gateway"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: ai-gateway - runway_lb - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,product_stage,proxy_continent,region,response_code,response_code_class,shard,stage,stage_group,tier,type,url_map_name) (
        rate(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count{job=~"runway-exporter",url_map_name=~"ai-gateway-url-map"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: ai-gateway - server - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:http_request_duration_seconds_bucket:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,handler,le,method,product_stage,region,shard,stage,stage_group,status,tier,type) (
        rate(http_request_duration_seconds_bucket{type=~"ai-gateway"}[5m] offset 30s)
      )
  - record: sli_aggregations:http_request_duration_seconds_count:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,handler,method,product_stage,region,shard,stage,stage_group,status,tier,type) (
        rate(http_request_duration_seconds_count{type=~"ai-gateway"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: ai-gateway - waf - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:cloudflare_zone_requests_status_country_host:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,host,product_stage,region,shard,stage,stage_group,status,tier,type,zone) (
        rate(cloudflare_zone_requests_status_country_host{host=~"codesuggestions.gitlab.com.*",type=~"ai-gateway",zone=~"gitlab\\.com"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: ai-gateway - inference_anthropic - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:inference_request_duration_seconds_bucket:rate_30m
    expr: |
      sum by (component,env,environment,error,feature_category,fqdn,le,model_engine,model_name,product_stage,region,shard,stage,stage_group,streaming,tier,type) (
        rate(inference_request_duration_seconds_bucket{error=~"no",streaming=~"no",type=~"ai-gateway"}[30m] offset 30s)
      )
  - record: sli_aggregations:model_inferences_total:rate_30m
    expr: |
      sum by (component,env,environment,error,feature_category,fqdn,model_engine,model_name,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(model_inferences_total{type=~"ai-gateway"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: ai-gateway - runway_ingress - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:stackdriver_cloud_run_revision_run_googleapis_com_request_count:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,location,product_stage,region,response_code,response_code_class,revision_name,shard,stage,stage_group,tier,type) (
        rate(stackdriver_cloud_run_revision_run_googleapis_com_request_count{type=~"ai-gateway"}[30m] offset 30s)
      )
  - record: sli_aggregations:stackdriver_cloud_run_revision_run_googleapis_com_request_latencies_bucket:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,le,location,product_stage,region,response_code,response_code_class,revision_name,shard,stage,stage_group,tier,type) (
        rate(stackdriver_cloud_run_revision_run_googleapis_com_request_latencies_bucket{type=~"ai-gateway"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: ai-gateway - runway_lb - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,product_stage,proxy_continent,region,response_code,response_code_class,shard,stage,stage_group,tier,type,url_map_name) (
        rate(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count{job=~"runway-exporter",url_map_name=~"ai-gateway-url-map"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: ai-gateway - server - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:http_request_duration_seconds_bucket:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,handler,le,method,product_stage,region,shard,stage,stage_group,status,tier,type) (
        rate(http_request_duration_seconds_bucket{type=~"ai-gateway"}[30m] offset 30s)
      )
  - record: sli_aggregations:http_request_duration_seconds_count:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,handler,method,product_stage,region,shard,stage,stage_group,status,tier,type) (
        rate(http_request_duration_seconds_count{type=~"ai-gateway"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: ai-gateway - waf - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:cloudflare_zone_requests_status_country_host:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,host,product_stage,region,shard,stage,stage_group,status,tier,type,zone) (
        rate(cloudflare_zone_requests_status_country_host{host=~"codesuggestions.gitlab.com.*",type=~"ai-gateway",zone=~"gitlab\\.com"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: ai-gateway - inference_anthropic - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:inference_request_duration_seconds_bucket:rate_1h
    expr: |
      sum by (component,env,environment,error,feature_category,fqdn,le,model_engine,model_name,product_stage,region,shard,stage,stage_group,streaming,tier,type) (
        rate(inference_request_duration_seconds_bucket{error=~"no",streaming=~"no",type=~"ai-gateway"}[1h] offset 30s)
      )
  - record: sli_aggregations:model_inferences_total:rate_1h
    expr: |
      sum by (component,env,environment,error,feature_category,fqdn,model_engine,model_name,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(model_inferences_total{type=~"ai-gateway"}[1h] offset 30s)
      )
- name: 'SLI Aggregations: ai-gateway - runway_ingress - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:stackdriver_cloud_run_revision_run_googleapis_com_request_count:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,location,product_stage,region,response_code,response_code_class,revision_name,shard,stage,stage_group,tier,type) (
        rate(stackdriver_cloud_run_revision_run_googleapis_com_request_count{type=~"ai-gateway"}[1h] offset 30s)
      )
  - record: sli_aggregations:stackdriver_cloud_run_revision_run_googleapis_com_request_latencies_bucket:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,le,location,product_stage,region,response_code,response_code_class,revision_name,shard,stage,stage_group,tier,type) (
        rate(stackdriver_cloud_run_revision_run_googleapis_com_request_latencies_bucket{type=~"ai-gateway"}[1h] offset 30s)
      )
- name: 'SLI Aggregations: ai-gateway - runway_lb - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,product_stage,proxy_continent,region,response_code,response_code_class,shard,stage,stage_group,tier,type,url_map_name) (
        rate(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count{job=~"runway-exporter",url_map_name=~"ai-gateway-url-map"}[1h] offset 30s)
      )
- name: 'SLI Aggregations: ai-gateway - server - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:http_request_duration_seconds_bucket:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,handler,le,method,product_stage,region,shard,stage,stage_group,status,tier,type) (
        rate(http_request_duration_seconds_bucket{type=~"ai-gateway"}[1h] offset 30s)
      )
  - record: sli_aggregations:http_request_duration_seconds_count:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,handler,method,product_stage,region,shard,stage,stage_group,status,tier,type) (
        rate(http_request_duration_seconds_count{type=~"ai-gateway"}[1h] offset 30s)
      )
- name: 'SLI Aggregations: ai-gateway - waf - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:cloudflare_zone_requests_status_country_host:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,host,product_stage,region,shard,stage,stage_group,status,tier,type,zone) (
        rate(cloudflare_zone_requests_status_country_host{host=~"codesuggestions.gitlab.com.*",type=~"ai-gateway",zone=~"gitlab\\.com"}[1h] offset 30s)
      )
