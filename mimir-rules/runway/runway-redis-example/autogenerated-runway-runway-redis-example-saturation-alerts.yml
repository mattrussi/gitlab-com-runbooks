# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/saturation.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: GitLab Component Saturation Statistics
  interval: 5m
  rules:
  - record: gitlab_component_saturation:ratio_quantile95_1w
    expr: quantile_over_time(0.95, gitlab_component_saturation:ratio{type="runway-redis-example"}[1w])
  - record: gitlab_component_saturation:ratio_quantile99_1w
    expr: quantile_over_time(0.99, gitlab_component_saturation:ratio{type="runway-redis-example"}[1w])
  - record: gitlab_component_saturation:ratio_quantile95_1h
    expr: quantile_over_time(0.95, gitlab_component_saturation:ratio{type="runway-redis-example"}[1h])
  - record: gitlab_component_saturation:ratio_quantile99_1h
    expr: quantile_over_time(0.99, gitlab_component_saturation:ratio{type="runway-redis-example"}[1h])
  - record: gitlab_component_saturation:ratio_avg_1h
    expr: avg_over_time(gitlab_component_saturation:ratio{type="runway-redis-example"}[1h])
- name: GitLab Saturation Alerts
  interval: 1m
  rules:
  - alert: component_saturation_slo_out_of_bounds:memorystore_redis_cpu
    for: 5m
    annotations:
      title: The Memorystore CPU Utilization resource of the {{ $labels.type }} service
        ({{ $labels.stage }} stage) has a saturation exceeding SLO and is close to
        its capacity limit.
      description: |
        This means that this resource is running close to capacity and is at risk of exceeding its current capacity limit.

        Details of the Memorystore CPU Utilization resource:

        Memorystore Redis CPU utilization.

        See https://cloud.google.com/memorystore/docs/redis/general-best-practices#cpu_usage_best_practices for more details
      grafana_dashboard_id: alerts-sat_memorystore_redis_cpu
      grafana_dashboard_link: https://dashboards.gitlab.net/d/alerts-sat_memorystore_redis_cpu?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-type={{ $labels.type }}&var-stage={{ $labels.stage
        }}
      grafana_datasource_id: mimir-runway
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "961599757"
      grafana_variables: environment,type,stage
      promql_query: |
        max by(environment,shard) (
          clamp_min(
            clamp_max(
              sum by (environment,shard)
              (
                stackdriver_redis_instance_redis_googleapis_com_stats_cpu_utilization_main_thread{environment="{{ $labels.environment }}", role='primary'}
              ) / 60
              ,
              1)
          ,
          0)
        )
      promql_template_1: |
        max by(environment,shard) (
          clamp_min(
            clamp_max(
              sum by (environment,shard)
              (
                stackdriver_redis_instance_redis_googleapis_com_stats_cpu_utilization_main_thread{environment="{{ $labels.environment }}", role='primary'}
              ) / 60
              ,
              1)
          ,
          0)
        )
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      rules_domain: general
      severity: s4
    expr: |
      gitlab_component_saturation:ratio{component="memorystore_redis_cpu",type="runway-redis-example"} > on(component) group_left
      slo:max:hard:gitlab_component_saturation:ratio{component="memorystore_redis_cpu"}
  - alert: component_saturation_slo_out_of_bounds:memorystore_redis_memory
    for: 5m
    annotations:
      title: The Memorystore Memory Utilization resource of the {{ $labels.type }}
        service ({{ $labels.stage }} stage) has a saturation exceeding SLO and is
        close to its capacity limit.
      description: |
        This means that this resource is running close to capacity and is at risk of exceeding its current capacity limit.

        Details of the Memorystore Memory Utilization resource:

        Memorystore Redis memory utilization.

        See https://cloud.google.com/memorystore/docs/redis/monitor-instances#create-stackdriver-alert
      grafana_dashboard_id: alerts-sat_memorystore_redis_memory
      grafana_dashboard_link: https://dashboards.gitlab.net/d/alerts-sat_memorystore_redis_memory?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-type={{ $labels.type }}&var-stage={{ $labels.stage
        }}
      grafana_datasource_id: mimir-runway
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3110369959"
      grafana_variables: environment,type,stage
      promql_query: |
        max by(environment,shard) (
          clamp_min(
            clamp_max(
              max by (environment,shard) (
                stackdriver_redis_instance_redis_googleapis_com_stats_memory_usage_ratio{environment="{{ $labels.environment }}", role = "primary"}
              )
              ,
              1)
          ,
          0)
        )
      promql_template_1: |
        max by(environment,shard) (
          clamp_min(
            clamp_max(
              max by (environment,shard) (
                stackdriver_redis_instance_redis_googleapis_com_stats_memory_usage_ratio{environment="{{ $labels.environment }}", role = "primary"}
              )
              ,
              1)
          ,
          0)
        )
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      rules_domain: general
      severity: s4
    expr: |
      gitlab_component_saturation:ratio{component="memorystore_redis_memory",type="runway-redis-example"} > on(component) group_left
      slo:max:hard:gitlab_component_saturation:ratio{component="memorystore_redis_memory"}
  - alert: component_saturation_slo_out_of_bounds:runway_container_cpu_utilization
    for: 5m
    annotations:
      title: The Runway Container CPU Utilization resource of the {{ $labels.type
        }} service ({{ $labels.stage }} stage) has a saturation exceeding SLO and
        is close to its capacity limit.
      description: |
        This means that this resource is running close to capacity and is at risk of exceeding its current capacity limit.

        Details of the Runway Container CPU Utilization resource:

        Container CPU utilization of the Runway service distributed across all container instances.

        For scaling, refer to https://cloud.google.com/run/docs/configuring/services/cpu.
      grafana_dashboard_id: alerts-sat_runway_container_cpu
      grafana_dashboard_link: https://dashboards.gitlab.net/d/alerts-sat_runway_container_cpu?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-type={{ $labels.type }}&var-stage={{ $labels.stage
        }}
      grafana_datasource_id: mimir-runway
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1050857443"
      grafana_variables: environment,type,stage
      promql_query: |
        max by(environment,location,region,revision_name,shard,type) (
          clamp_min(
            clamp_max(
              histogram_quantile(0.9999, sum by(le, environment,location,region,revision_name,shard,type)
                (
                  avg_over_time(
                    stackdriver_cloud_run_revision_run_googleapis_com_container_cpu_utilizations_bucket{job="runway-exporter",environment="{{ $labels.environment }}",type="{{ $labels.type }}"}[30m]
                  )
                )
              )
              ,
              1)
          ,
          0)
        )
      promql_template_1: |
        max by(environment,location,region,revision_name,shard,type) (
          clamp_min(
            clamp_max(
              histogram_quantile(0.9999, sum by(le, environment,location,region,revision_name,shard,type)
                (
                  avg_over_time(
                    stackdriver_cloud_run_revision_run_googleapis_com_container_cpu_utilizations_bucket{job="runway-exporter",environment="{{ $labels.environment }}",type="{{ $labels.type }}"}[30m]
                  )
                )
              )
              ,
              1)
          ,
          0)
        )
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      rules_domain: general
      severity: s4
    expr: |
      gitlab_component_saturation:ratio{component="runway_container_cpu_utilization",type="runway-redis-example"} > on(component) group_left
      slo:max:hard:gitlab_component_saturation:ratio{component="runway_container_cpu_utilization"}
  - alert: component_saturation_slo_out_of_bounds:runway_container_instance_utilization
    for: 5m
    annotations:
      title: The Runway Container Instance Utilization resource of the {{ $labels.type
        }} service ({{ $labels.stage }} stage) has a saturation exceeding SLO and
        is close to its capacity limit.
      description: |
        This means that this resource is running close to capacity and is at risk of exceeding its current capacity limit.

        Details of the Runway Container Instance Utilization resource:

        Container instance utilization of the Runway service.

        For scaling, refer to https://cloud.google.com/run/docs/configuring/max-instances.
      grafana_dashboard_id: alerts-sat_runway_container_instance
      grafana_dashboard_link: https://dashboards.gitlab.net/d/alerts-sat_runway_container_instance?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-type={{ $labels.type }}&var-stage={{ $labels.stage
        }}
      grafana_datasource_id: mimir-runway
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1738137433"
      grafana_variables: environment,type,stage
      promql_query: |
        max by(environment,location,region,revision_name,shard,type) (
          clamp_min(
            clamp_max(
              sum by (environment,location,region,revision_name,shard,type) (
                stackdriver_cloud_run_revision_run_googleapis_com_container_instance_count{job="runway-exporter",state="active",environment="{{ $labels.environment }}",type="{{ $labels.type }}"}
              )
              /
              100
              ,
              1)
          ,
          0)
        )
      promql_template_1: |
        max by(environment,location,region,revision_name,shard,type) (
          clamp_min(
            clamp_max(
              sum by (environment,location,region,revision_name,shard,type) (
                stackdriver_cloud_run_revision_run_googleapis_com_container_instance_count{job="runway-exporter",state="active",environment="{{ $labels.environment }}",type="{{ $labels.type }}"}
              )
              /
              100
              ,
              1)
          ,
          0)
        )
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      rules_domain: general
      severity: s4
    expr: |
      gitlab_component_saturation:ratio{component="runway_container_instance_utilization",type="runway-redis-example"} > on(component) group_left
      slo:max:hard:gitlab_component_saturation:ratio{component="runway_container_instance_utilization"}
  - alert: component_saturation_slo_out_of_bounds:runway_container_max_concurrent_requests
    for: 5m
    annotations:
      title: The Runway Max Concurrent Requests resource of the {{ $labels.type }}
        service ({{ $labels.stage }} stage) has a saturation exceeding SLO and is
        close to its capacity limit.
      description: |
        This means that this resource is running close to capacity and is at risk of exceeding its current capacity limit.

        Details of the Runway Max Concurrent Requests resource:

        Max number of concurrent requests being served by each container instance of the Runway service.

        For scaling, refer to https://cloud.google.com/run/docs/configuring/concurrency.
      grafana_dashboard_id: alerts-sat_runway_container_max_con_reqs
      grafana_dashboard_link: https://dashboards.gitlab.net/d/alerts-sat_runway_container_max_con_reqs?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-type={{ $labels.type }}&var-stage={{ $labels.stage
        }}
      grafana_datasource_id: mimir-runway
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4285373877"
      grafana_variables: environment,type,stage
      promql_query: |
        max by(environment,location,region,revision_name,shard,type) (
          clamp_min(
            clamp_max(
              histogram_quantile(0.9999, sum by(le, environment,location,region,revision_name,shard,type)
                (
                  rate(
                    stackdriver_cloud_run_revision_run_googleapis_com_container_max_request_concurrencies_bucket{job="runway-exporter",state="active",environment="{{ $labels.environment }}",type="{{ $labels.type }}"}[30m]
                  )
                )
              ) / 100
              ,
              1)
          ,
          0)
        )
      promql_template_1: |
        max by(environment,location,region,revision_name,shard,type) (
          clamp_min(
            clamp_max(
              histogram_quantile(0.9999, sum by(le, environment,location,region,revision_name,shard,type)
                (
                  rate(
                    stackdriver_cloud_run_revision_run_googleapis_com_container_max_request_concurrencies_bucket{job="runway-exporter",state="active",environment="{{ $labels.environment }}",type="{{ $labels.type }}"}[30m]
                  )
                )
              ) / 100
              ,
              1)
          ,
          0)
        )
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      rules_domain: general
      severity: s4
    expr: |
      gitlab_component_saturation:ratio{component="runway_container_max_concurrent_requests",type="runway-redis-example"} > on(component) group_left
      slo:max:hard:gitlab_component_saturation:ratio{component="runway_container_max_concurrent_requests"}
  - alert: component_saturation_slo_out_of_bounds:runway_container_memory_utilization
    for: 5m
    annotations:
      title: The Runway Container Memory Utilization resource of the {{ $labels.type
        }} service ({{ $labels.stage }} stage) has a saturation exceeding SLO and
        is close to its capacity limit.
      description: |
        This means that this resource is running close to capacity and is at risk of exceeding its current capacity limit.

        Details of the Runway Container Memory Utilization resource:

        Container memory utilization of the Runway service distributed across all container instances.

        For scaling, refer to https://cloud.google.com/run/docs/configuring/services/memory-limits.
      grafana_dashboard_id: alerts-sat_runway_container_memory
      grafana_dashboard_link: https://dashboards.gitlab.net/d/alerts-sat_runway_container_memory?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-type={{ $labels.type }}&var-stage={{ $labels.stage
        }}
      grafana_datasource_id: mimir-runway
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "377718254"
      grafana_variables: environment,type,stage
      promql_query: |
        max by(environment,region,revision_name,shard,type) (
          clamp_min(
            clamp_max(
              histogram_quantile(0.9999, sum by(le, environment,region,revision_name,shard,type)
                (
                  avg_over_time(
                    stackdriver_cloud_run_revision_run_googleapis_com_container_memory_utilizations_bucket{job="runway-exporter",environment="{{ $labels.environment }}",type="{{ $labels.type }}"}[30m]
                  )
                )
              )
              ,
              1)
          ,
          0)
        )
      promql_template_1: |
        max by(environment,region,revision_name,shard,type) (
          clamp_min(
            clamp_max(
              histogram_quantile(0.9999, sum by(le, environment,region,revision_name,shard,type)
                (
                  avg_over_time(
                    stackdriver_cloud_run_revision_run_googleapis_com_container_memory_utilizations_bucket{job="runway-exporter",environment="{{ $labels.environment }}",type="{{ $labels.type }}"}[30m]
                  )
                )
              )
              ,
              1)
          ,
          0)
        )
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      rules_domain: general
      severity: s4
    expr: |
      gitlab_component_saturation:ratio{component="runway_container_memory_utilization",type="runway-redis-example"} > on(component) group_left
      slo:max:hard:gitlab_component_saturation:ratio{component="runway_container_memory_utilization"}
